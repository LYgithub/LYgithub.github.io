<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MyBatis-基本操作</title>
    <url>/kawyang/8661f06f.html</url>
    <content><![CDATA[<blockquote>
<p>MyBatis 是一款优秀的半自动的轻量级的持久层框架。本文介绍了 <code>MyBatis</code> 的基本项目的创建和使用。</p>
</blockquote>
<a id="more"></a>

<h2 id="创建Maven项目"><a href="#创建Maven项目" class="headerlink" title="创建Maven项目"></a>创建Maven项目</h2><h2 id="pom-xml-导入相关依赖"><a href="#pom-xml-导入相关依赖" class="headerlink" title="pom.xml 导入相关依赖"></a>pom.xml 导入相关依赖</h2><ul>
<li>org.mybatis -&gt; mybatis</li>
<li>mysql-connection-java -&gt; mysql</li>
<li>org.projectlombok -&gt; lombok</li>
<li>log4j -&gt; log4j</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MyBatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li><strong>配置 <code>mapper</code> 读取位置</strong> ，解决Mapper配置文件读取不到的关键<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></div>


</li>
</ul>
<blockquote>
<p>resources/config.xml</p>
</blockquote>
<p>通过 <code>config.xml</code> 进行数据库的配置和相关Mapper的导入。</p>
<ul>
<li>约束</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    	<span class="comment">&lt;!-- SQL配置 --&gt;</span></span><br><span class="line">    	<span class="comment">&lt;!-- 连接配置 --&gt;</span></span><br><span class="line">    	<span class="comment">&lt;!-- 注册Mapper --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>SQL 的相关配置</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 打印SQL语句 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"logImpl"</span> <span class="attr">value</span>=<span class="string">"STDOUT_LOGGING"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>连接配置</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.cj.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/JavaWeb?userSSL=false<span class="symbol">&amp;amp;</span>allowPublicKeyRetrieval=true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li><p>注册Mapper</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 注解形式注册 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">"com.kawyang.repository.IClass"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置文件方式注册 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/kawyang/mapper/IClassesMapper.xml"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/kawyang/mapper/IStudentMapper.xml"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

</li>
</ul>
<h2 id="entity"><a href="#entity" class="headerlink" title="entity"></a>entity</h2><p>创建实体类对象。</p>
<p>lombok 会通过以下注解快速🔜完成设置<br>            <code>@Data</code> : 自动添加 Get/Set 方法。<br>            <code>@AllArgsConstructor</code> : 有参构造<br>            <code>@NoArgsConstructor</code> : 无参构造  </p>
<ul>
<li>配置文件形式</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Classes</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>


<h2 id="repository"><a href="#repository" class="headerlink" title="repository"></a>repository</h2><blockquote>
<p>编写数据库操作接口</p>
</blockquote>
<ul>
<li><p>配置文件形式</p>
<p>通过配置文件形式，需要编写相应的 <code>Mapper</code> 配置文件，将接口中的方法与 数据库的操作进行映射。<br>并且在 <code>config.xml</code> 中对配置文件 通过 mapper 🏷️的 <code>resource</code> 属性，完成注册。</p>
</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IClasses</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Classes <span class="title">findById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Classes&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insertClass</span><span class="params">(Classes classes)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateClass</span><span class="params">(Classes classes)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">ClassesStudents <span class="title">findClassAndStudentById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;ClassesStudents&gt; <span class="title">findAllClassAndStudent</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>注解形式</li>
</ul>
<p>通过一下注解，编写相应的SQL语句，完成接口方法与数据库操作的映射，不需要配置文件，在 <code>config.xml</code> 中，使用 mapper🏷️ 的  <code>class</code> 属性完成注册。</p>
<ul>
<li>@Insert(String sql) : 增</li>
<li>@Delete(String sql) : 删</li>
<li>@Update(String sql) : 改</li>
<li>@Select(String sql) : 查</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IClasses</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Select</span>(<span class="string">"select * from classes where id=#&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function">Classes <span class="title">findById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from classes"</span>)</span><br><span class="line">    <span class="function">List&lt;Classes&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Insert</span>(<span class="string">"insert into classes (id,name) values (#&#123;id&#125;,#&#123;name&#125;)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insertClass</span><span class="params">(Classes classes)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Delete</span>(<span class="string">"delete from classes where id=#&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Update</span>(<span class="string">"update from classes set name=#&#123;name&#125; where id=#&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateClass</span><span class="params">(Classes classes)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h2 id="mapper"><a href="#mapper" class="headerlink" title="mapper"></a>mapper</h2><p>com.mapper.IClassesMapper</p>
<p>编写数据库操作的Mapper文件，完成方法与查询语句的映射。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">select</span> &gt;</span>..<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">delete</span> &gt;</span>..<span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">update</span> &gt;</span>..<span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">insert</span> &gt;</span>..<span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>Mapper🏷️ 通过属性 <code>namespace</code> : 数据库操作接口的全路径<br>数据库操作🏷️ :</p>
<ul>
<li><p>select</p>
<ul>
<li>id : 映射接口的方法名</li>
<li>parameterType : 方法参数的类型</li>
<li>resultType : 返回值类型的全路径</li>
</ul>
</li>
<li><p>delete</p>
<ul>
<li>id : 映射接口的方法名</li>
<li>parameterType : 方法参数的类型</li>
<li>无返回值属性，返回值为 <code>int</code> 类型</li>
</ul>
</li>
<li><p>update</p>
<ul>
<li>id : 映射接口的方法名</li>
<li>parameterType : 方法参数的类型</li>
<li>无返回值属性，返回值为 <code>int</code> 类型</li>
</ul>
</li>
<li><p>insert</p>
<ul>
<li>id : 映射接口的方法名</li>
<li>parameterType : 方法参数的类型</li>
</ul>
</li>
<li><p>resultMap:</p>
</li>
</ul>
<p>通过 <code>resultMap</code> 进行含有内嵌对象类的配置。  </p>
<p>如：StudentClas 类，除了包含student的基本信息外，含有内嵌对象 classes，需要通过 resultMap 来完成数据的配置。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"StudentCla"</span> <span class="attr">type</span>=<span class="string">"com.kawyang.entity.StudentCla"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"sid"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"sname"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"students"</span> <span class="attr">ofType</span>=<span class="string">"com.kawyang.model.Classes"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"cid"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"cname"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectStudentClaById"</span> <span class="attr">resultMap</span>=<span class="string">"StudentCla"</span> <span class="attr">parameterType</span>=<span class="string">"ind"</span>&gt;</span></span><br><span class="line">	select s.id as sid, s.name as sname, c.id as cid, c.name as cname</span><br><span class="line">	from student s,classes c </span><br><span class="line">	where s.cid=c.id and s.id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>resultMap🏷️ :   <ul>
<li>id -&gt; resultMap 的 id  </li>
<li>type -&gt; 实体类类型  </li>
</ul>
</li>
<li>id 和 result🏷️ : <ul>
<li>id : 指定主键信息 </li>
<li>result : 指定非主键信息</li>
<li>property -&gt; 类的属性名称  </li>
<li>column -&gt; 查询结果的列名  </li>
</ul>
</li>
<li>collection🏷️：完成对象注入  <ul>
<li>property -&gt; 类的注入对象的名称  </li>
<li>ofType -&gt; 注入对象的类型  </li>
</ul>
</li>
</ul>
<h2 id="Main"><a href="#Main" class="headerlink" title="Main"></a>Main</h2><ol>
<li>读取配置文件</li>
<li>创建SQLSession对象</li>
<li>使用SQLSession对象，创建 相应操作的 mapper 对象</li>
<li>使用 mapper 对象完成 数据库的操作</li>
</ol>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// 1. 读取配置文件</span></span><br><span class="line">		InputStream in = Main.class.getClassLoader().getResourceAsStream("config.xml");</span><br><span class="line">		<span class="comment">// 2. 创建SQLSession对象</span></span><br><span class="line">		<span class="comment">// 2.1 创建 SqlSession 工厂🏭类</span></span><br><span class="line">		SqlSessionFactoryBuilder bulider = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">		<span class="comment">// 2.2 使用配置文件 完成🏭创建</span></span><br><span class="line">		SqlSessionFactory bulid = bulider.build(in);</span><br><span class="line">		<span class="comment">// 2.3 使用🏭创建 SqlSession</span></span><br><span class="line">		SqlSession session = build.openSession();</span><br><span class="line">		<span class="comment">// 3. 使用SQLSession对象，创建 相应操作的 mapper 对象</span></span><br><span class="line">		IStudentCla mapper = session.getMapper(IStudentCla<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">		<span class="comment">// 4. 使用 mapper 对象完成 数据库的操作</span></span><br><span class="line">		StudentCla student = mapper.findById(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 5. 提交事务  添加数据时使用</span></span><br><span class="line">		session.commit();</span><br><span class="line">        </span><br><span class="line">		<span class="comment">// 5. 关闭 SqlSession</span></span><br><span class="line">		session.close();</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>




















]]></content>
      <categories>
        <category>框架</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-双指针&amp;167</title>
    <url>/kawyang/16b04212.html</url>
    <content><![CDATA[<blockquote>
<p>给定一个已按照<code>升序排列</code>的有序数组，找到两个数使得它们相加之和等于目标数。函数应该返回这两个下标值 index1 和 index2，其中 index1必须小于index2。</p>
</blockquote>
<blockquote>
<p>示例：</p>
</blockquote>
<p>输入: numbers = [2, 7, 11, 15], target = 9<br>输出: [1,2]<br>解释: 2 与 7 之和等于目标数 9 。因此 index1 = 1, index2 = 2 。</p>
<a id="more"></a>

<p><a href="https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/" target="_blank" rel="noopener">题目链接</a></p>
<h2 id="原始解法"><a href="#原始解法" class="headerlink" title="原始解法"></a>原始解法</h2><p>通过双层循环，依次便利测试，如果测试成功返回下标，不成功继续测试。<br>时间复杂度 <code>O(n^2)</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] numbers, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        <span class="keyword">int</span> index1,index2, sum[]= <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span>(index1 = <span class="number">0</span>; index1 &lt; numbers.length; index1 ++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(index2 = index1 + <span class="number">1</span>; index2 &lt; numbers.length ; index2 ++ )&#123;</span><br><span class="line">            	<span class="comment">// 测试成功！</span></span><br><span class="line">                <span class="keyword">if</span>(numbers[index1] + numbers[index2] == target)&#123;</span><br><span class="line">                    sum[<span class="number">0</span>] = index1 + <span class="number">1</span>;</span><br><span class="line">                    sum[<span class="number">1</span>] = index2 + <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">return</span> sum;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 如果和大于 target index2 不需要继续向下测试</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(numbers[index1] + numbers[index2] &gt; target)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="双指针方法"><a href="#双指针方法" class="headerlink" title="双指针方法"></a>双指针方法</h2><p>两个指针分别指向数组两头：</p>
<p>如果 sum &gt; target ： 需要减小大值 =&gt; index2 前移</p>
<p>如果 sum &lt; target ： 需要增大小值 =&gt; index1 后移</p>
<p>如果 sum = target ： 获取到需要的坐标</p>
<ul>
<li>通过如上方法，数组最多遍历一遍，所以时间复杂度 为 <code>O(n)</code></li>
</ul>
<blockquote>
<p>实例如下：</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] numbers, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        <span class="keyword">int</span> index1, index2;</span><br><span class="line">        index1 = <span class="number">0</span>;</span><br><span class="line">        index2 = numbers.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(index1 &lt; index2)&#123;</span><br><span class="line">            <span class="keyword">if</span>(numbers[index1] + numbers[index2] &gt; target )&#123;</span><br><span class="line">                index2--; </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(numbers[index1] + numbers[index2] == target )&#123; </span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;index1+<span class="number">1</span>,index2+<span class="number">1</span>&#125;; </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(numbers[index1] + numbers[index2] &lt; target )&#123;</span><br><span class="line">                index1 ++ ; </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="结果对比"><a href="#结果对比" class="headerlink" title="结果对比"></a>结果对比</h2><table>
<thead>
<tr>
<th align="left">方法</th>
<th align="left">提交结果</th>
<th align="left">运行时间</th>
<th align="center">内存消耗</th>
<th align="left">语言</th>
</tr>
</thead>
<tbody><tr>
<td align="left">原始方法</td>
<td align="left">通过</td>
<td align="left"><code>82 ms</code></td>
<td align="center">39.8 MB</td>
<td align="left">Java</td>
</tr>
<tr>
<td align="left">双指针</td>
<td align="left">通过</td>
<td align="left"><code>1 ms</code></td>
<td align="center">40 MB</td>
<td align="left">Java</td>
</tr>
</tbody></table>
<hr>
<p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted" target="_blank" rel="noopener">https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
]]></content>
      <categories>
        <category>LeetCode</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>双指针</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-双指针&amp;移除元素-27</title>
    <url>/kawyang/276090df.html</url>
    <content><![CDATA[<blockquote>
<p>给你一个数组<code>nums</code> 和一个值 val，你需要 原地 移除所有数值等于<code>val</code>的元素，并返回移除后数组的新长度。<br>不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 <code>原地</code> 修改输入数组。<br>元素的<code>顺序可以改变</code>。你不需要考虑数组中超出新长度后面的元素。</p>
</blockquote>
<a id="more"></a>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>示例 1:</p>
<p>给定 nums = [3,2,2,3], val = 3,</p>
<p>函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。</p>
<p>你不需要考虑数组中超出新长度后面的元素。<br>示例2:</p>
<p>给定 nums = [0,1,2,2,3,0,4,2], val = 2,</p>
<p>函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。</p>
<p>注意这五个元素可为任意顺序。</p>
<p>你不需要考虑数组中超出新长度后面的元素。</p>
<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>为什么返回数值是整数，但输出的答案是数组呢?</p>
<p>请注意，输入数组是以「引用」方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。</p>
<p>你可以想象内部操作如下:</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// nums 是以“引用”方式传递的。也就是说，不对实参作任何拷贝</span></span><br><span class="line"><span class="keyword">int</span> len = removeElement(nums, val);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在函数里修改输入数组对于调用者是可见的。</span></span><br><span class="line"><span class="comment">// 根据你的函数返回的长度, 它会打印出数组中 该长度范围内 的所有元素。</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">	print(nums[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p><img src="https://gitee.com/KawYang/image/raw/master/img/20200711155701.png" alt=""></p>
<blockquote>
<p>i 标记符合元素的结尾， 初始值为 : 第一个为 val 的值，在 i 之前全部符合要求。<br>j 标记查找后方元素，如果 为 val : 跳过，如果不同：将元素移动到 i 标记处.</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">removeElement</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 找出 i 的初始值</span></span><br><span class="line">        <span class="keyword">while</span>(i&lt;nums.length &amp;&amp; nums[i] != val)&#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// j 查找不同的元素，如果不相同，移动到 i 的位置，i后移。</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j&lt; nums.length; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[j] != val)&#123;</span><br><span class="line">                nums[i] = nums[j];</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<hr>
<p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/remove-element" target="_blank" rel="noopener">https://leetcode-cn.com/problems/remove-element</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
]]></content>
      <categories>
        <category>LeetCode</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>双指针</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis-延迟加载</title>
    <url>/kawyang/70e7f4d8.html</url>
    <content><![CDATA[<blockquote>
<p>本文主要总结了 <code>Mybatis</code> 的数据库延迟加载问题，将多表查询的 SQL 语句进行拆分，根据需要进行相应的查询操作。</p>
</blockquote>
<a id="more"></a>

<h3 id="assocation-延迟加载"><a href="#assocation-延迟加载" class="headerlink" title="assocation 延迟加载"></a>assocation 延迟加载</h3><blockquote>
<p>assocation实现一对一延迟加载</p>
</blockquote>
<p>将级联操作 转换为两条SQL语句，通过两次查询方式进行获取数据。</p>
<p>含有 注入对象的对象查询，当查询结果不涉及注入对象信息时，不进行内嵌对象的查询。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--  延迟加载  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"resultStuLazy"</span> <span class="attr">type</span>=<span class="string">"com.item.entity.Student"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"name"</span> <span class="attr">property</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 添加select 属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"classes"</span> <span class="attr">javaType</span>=<span class="string">"com.item.entity.Classes_"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">select</span>=<span class="string">"com.item.repository.IClasses.findById"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">column</span>=<span class="string">"cid"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">resultMap</span>=<span class="string">"resultStuLazy"</span>&gt;</span></span><br><span class="line">    select id,name,cid from student where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></div>


<blockquote>
<p>在全局配置文件中开启延迟加载</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"aggressiveLazyLoading"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p><a href="https://www.jianshu.com/p/6f5b42d52d38" target="_blank" rel="noopener">name 参数参考</a></p>
<h3 id="Collection-延迟加载"><a href="#Collection-延迟加载" class="headerlink" title="Collection 延迟加载"></a>Collection 延迟加载</h3><blockquote>
<p>Collection 实现一对多延迟加载。</p>
</blockquote>
<p>在查询班级信息时，如果需要查询班级内所有👨‍🎓信息，需要进行级联操作。<br>可以将该操作分为两步：</p>
<ul>
<li>先根据🆔查询出班级信息 =&gt; select * from classes where id=?</li>
<li>再根据👩‍🎓的班级🆔，查询出班级内所有👨‍🎓 =&gt; select * from student where cid=?</li>
</ul>
<blockquote>
<p>查询班级信息</p>
</blockquote>
<p>采用配置文件的方式，用 <code>collection</code> 配置第二步的操作，使用 <code>ofType</code> 属性，完成数据类型的指定。<br>如下：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--  延迟加载start  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"classLazy"</span> <span class="attr">type</span>=<span class="string">"com.kawyang.entity.ClassesStu"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"students"</span> <span class="attr">ofType</span>=<span class="string">"com.kawyang.entity.Student"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">select</span>=<span class="string">"com.kawyang.repository.IStudentRepository.findByCid"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">column</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdLazy"</span> <span class="attr">resultMap</span>=<span class="string">"classLazy"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">    select * from classes where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  延迟加载end  --&gt;</span></span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>根据班级 🆔 查询所有👩‍🎓👨‍🎓，使用注解方式如下：</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"select * from student where cid=#&#123;id&#125;"</span>)</span><br><span class="line"><span class="function">List&lt;Student&gt; <span class="title">findByCid</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure></div>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line">IStudentRepository mapper = MapperUtil.getMapper(<span class="string">"config.xml"</span>, IStudentRepository<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">Student byIdLazy = mapper.findByIdLazy(<span class="number">2</span>);</span><br><span class="line"><span class="comment">//通过 🆔 查询学生信息，只需要获取 name 属性，不需要进行第二步操作。</span></span><br><span class="line">System.out.println(byIdLazy.getName());</span><br><span class="line">System.out.println(<span class="string">"------------"</span>);</span><br><span class="line"><span class="comment">//需要获取班级的名称，需要进行两次查询操作。</span></span><br><span class="line">System.out.println(byIdLazy.getClasses().getName());</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"============"</span>);</span><br><span class="line"></span><br><span class="line">IClassRepository mapper1 = MapperUtil.getMapper(<span class="string">"config.xml"</span>, IClassRepository<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">ClassesStu byIdLazy1 = mapper1.findByIdLazy(<span class="number">2</span>);</span><br><span class="line"><span class="comment">//通过 🆔 查询本季信息，只需要获取 name 属性，不需要进行第二步操作。</span></span><br><span class="line">System.out.println(byIdLazy1.getName());</span><br><span class="line">System.out.println(<span class="string">"------------"</span>);</span><br><span class="line"><span class="comment">//需要获取班级所有👩‍🎓👨‍🎓信息，需要进行两次查询操作。</span></span><br><span class="line">System.out.println(byIdLazy1.getStudents());</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>运行结果</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="code"><pre><span class="line">Opening JDBC Connection</span><br><span class="line">Created connection 1267149311.</span><br><span class="line">Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4b8729ff]</span><br><span class="line">==&gt;  Preparing: select * from student where id=?</span><br><span class="line">==&gt; Parameters: 2(Integer)</span><br><span class="line">&lt;==    Columns: id, name, cid</span><br><span class="line">&lt;==        Row: 2, KawYang, 2</span><br><span class="line">&lt;==      Total: 1</span><br><span class="line">KawYang</span><br><span class="line">------------</span><br><span class="line">==&gt;  Preparing: select * from classes where id=?</span><br><span class="line">==&gt; Parameters: 2(Integer)</span><br><span class="line">&lt;==    Columns: id, name</span><br><span class="line">&lt;==        Row: 2, 二班</span><br><span class="line">&lt;==      Total: 1</span><br><span class="line">二班</span><br><span class="line"></span><br><span class="line">============</span><br><span class="line"></span><br><span class="line">Opening JDBC Connection</span><br><span class="line">Created connection 1414549197.</span><br><span class="line">Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@54504ecd]</span><br><span class="line">==&gt;  Preparing: select * from classes where id=?</span><br><span class="line">==&gt; Parameters: 2(Integer)</span><br><span class="line">&lt;==    Columns: id, name</span><br><span class="line">&lt;==        Row: 2, 二班</span><br><span class="line">&lt;==      Total: 1</span><br><span class="line">二班</span><br><span class="line">------------</span><br><span class="line">==&gt;  Preparing: select * from student where cid=?</span><br><span class="line">==&gt; Parameters: 2(Integer)</span><br><span class="line">&lt;==    Columns: id, name, cid</span><br><span class="line">&lt;==        Row: 2, KawYang, 2</span><br><span class="line">&lt;==        Row: 3, 张三, 2</span><br><span class="line">&lt;==      Total: 2</span><br><span class="line">[Student(id=2, name=KawYang, classes=null), Student(id=3, name=张三, classes=null)]</span><br><span class="line"></span><br><span class="line">Process finished with exit code 0</span><br></pre></td></tr></table></figure></div>

<p>⚠️ : 由于 MyBatis 默认开启一级缓存，所以在第二步查询时，只执行了第二条SQL语句。</p>
]]></content>
      <categories>
        <category>框架</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis-数据缓存</title>
    <url>/kawyang/579a3ded.html</url>
    <content><![CDATA[<blockquote>
<p>将查询过的数据进行缓存，可以减少数据库访问的次数，减轻负担服务器的，同时也可以提高数据访问时间。</p>
</blockquote>
<a id="more"></a>

<h2 id="一级缓存"><a href="#一级缓存" class="headerlink" title="一级缓存"></a>一级缓存</h2><blockquote>
<p>一级缓存是 SqlSession 级别的缓存，只要 SqlSession 没有被 close 或 flush ，就会存在。</p>
</blockquote>
<ul>
<li><p>当执行两次相同的查询时，MyBatis 会将第一次查询的结果保存到缓存中，再次运行查询代码，就不需要执行SQL 语句，直接从缓存中获取数据。</p>
</li>
<li><p>当调用 SqlSession 对数据进行 修改、插入、删除、commit()、close() 等就会清空一级缓存。以保证缓存中数据为最新数据，避免脏读。</p>
</li>
<li><p>一级缓存清空：</p>
<ul>
<li>调用 SqlSession对象的 <code>clearCache()</code> 方法</li>
<li>close()</li>
<li>commit()</li>
</ul>
</li>
</ul>
<h2 id="二级缓存"><a href="#二级缓存" class="headerlink" title="二级缓存"></a>二级缓存</h2><blockquote>
<p>二级缓存是 <code>Mapper</code> 映射级别的缓存，多个 SqlSession 对象，操作同一个 Mapper 映射的 SQL ，公用一个缓存对象。</p>
</blockquote>
<h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><h4 id="引入坐标"><a href="#引入坐标" class="headerlink" title="引入坐标"></a>引入坐标</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ehchache 缓存  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sf.ehcache<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h4 id="开启缓存"><a href="#开启缓存" class="headerlink" title="开启缓存"></a>开启缓存</h4><p>在 MyBatis的配置文件中(config.xml)，使用 settings 标签下 的 setting 标签 开启缓存。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  打印SQL  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"logImpl"</span> <span class="attr">value</span>=<span class="string">"STDOUT_LOGGING"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  开启延迟加载  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  开启二级缓存  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"cacheEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h4 id="配置Mapper"><a href="#配置Mapper" class="headerlink" title="配置Mapper"></a>配置Mapper</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"..."</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">cache</span>&gt;</span><span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">cache</span> <span class="attr">type</span>=<span class="string">"org.mybatis.caches.ehcache.LoggingEhcache"</span> &gt;</span></span><br><span class="line">		<span class="comment">&lt;!--   创建缓存之后，对吼一次访问缓存的时间值缓存失效的时间间隔  --&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"timeToIdleSeconds"</span> <span class="attr">value</span>=<span class="string">"3600"</span>/&gt;</span><span class="comment">&lt;!--1 hour--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--   缓存自创建时间起至失效的时间间隔  --&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"timeToLiveSeconds"</span> <span class="attr">value</span>=<span class="string">"3600"</span>/&gt;</span><span class="comment">&lt;!--1 hour--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--        --&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxEntriesLocalHeap"</span> <span class="attr">value</span>=<span class="string">"1000"</span>/&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxEntriesLocalDisk"</span> <span class="attr">value</span>=<span class="string">"10000000"</span>/&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--   缓存回收策略，移除-近期使用最少的对象 --&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"memoryStoreEvictionPolicy"</span> <span class="attr">value</span>=<span class="string">"LRU"</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></div>


<h4 id="配置-useCache-属性"><a href="#配置-useCache-属性" class="headerlink" title="配置 useCache 属性"></a>配置 useCache 属性</h4><blockquote>
<p>如果每次查询都需要最新的数据，需要将 select🏷️ 中的 <code>useCache</code> 属性设置为 <code>false</code>, 禁用二级缓存。</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.item.entity.Student"</span> <span class="attr">useCache</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">    select id,name from student </span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><blockquote>
<p>步骤</p>
</blockquote>
<p>使用<code>同一个</code>Mapper映射，创建两个<code>不同</code>的 SqlSession 对象，分别执行<code>相同</code> 的SQL操作</p>
<p>if : 执行一次 SQL 语句<br>    二级缓存成功！<br>else :<br>    二级缓存失败！</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindCache</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        InputStream resourceAsStream = FindCache.class.getClassLoader().getResourceAsStream("config.xml");</span><br><span class="line">        SqlSessionFactoryBuilder builder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">        SqlSessionFactory build = builder.build(resourceAsStream);</span><br><span class="line">        SqlSession sqlSession = build.openSession();</span><br><span class="line">        IGoodRepository mapper = sqlSession.getMapper(IGoodRepository<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        Good goodById = mapper.findGoodById(<span class="number">2</span>);</span><br><span class="line">        System.out.println(goodById.toString());</span><br><span class="line">        <span class="comment">//关闭一级缓存</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line"></span><br><span class="line">        SqlSession sqlSession1 = build.openSession();</span><br><span class="line">        IGoodRepository mapper1 = sqlSession1.getMapper(IGoodRepository<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        Good goodById1 = mapper1.findGoodById(<span class="number">2</span>);</span><br><span class="line">        System.out.println(goodById1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>结果:</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="code"><pre><span class="line">Cache Hit Ratio [com.kawyang.repository.IGoodRepository]: 0.0</span><br><span class="line">Opening JDBC Connection</span><br><span class="line">Created connection 392918519.</span><br><span class="line">Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@176b75f7]</span><br><span class="line">==&gt;  Preparing: select * from good where id=?</span><br><span class="line">==&gt; Parameters: 2(Integer)</span><br><span class="line">&lt;==    Columns: id, name</span><br><span class="line">&lt;==        Row: 2, 电冰箱</span><br><span class="line">&lt;==      Total: 1</span><br><span class="line">Good(id=2, name=电冰箱, consumers=null)</span><br><span class="line">Resetting autocommit to true on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@176b75f7]</span><br><span class="line">Closing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@176b75f7]</span><br><span class="line">Returned connection 392918519 to pool.</span><br><span class="line">Cache Hit Ratio [com.kawyang.repository.IGoodRepository]: 0.5</span><br><span class="line">Good(id=2, name=电冰箱, consumers=null)</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>一下具体内容及原因，有待进一步了解学习。</p>
</blockquote>
<p>⚠️ : 如果使用 sqlSession.clearCache(); 清除缓存，但依然缓存着其他 SqlSession 对象的缓存数据。</p>
<p>如下测试：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindCache</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        InputStream resourceAsStream = FindCache.class.getClassLoader().getResourceAsStream("config.xml");</span><br><span class="line">        SqlSessionFactoryBuilder builder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">        SqlSessionFactory build = builder.build(resourceAsStream);</span><br><span class="line">        SqlSession sqlSession = build.openSession();</span><br><span class="line">        IGoodRepository mapper = sqlSession.getMapper(IGoodRepository<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        Good goodById = mapper.findGoodById(<span class="number">2</span>);</span><br><span class="line">        System.out.println(goodById.toString());</span><br><span class="line"></span><br><span class="line">        SqlSession sqlSession1 = build.openSession();</span><br><span class="line">        IGoodRepository mapper1 = sqlSession1.getMapper(IGoodRepository<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        Good goodById1 = mapper1.findGoodById(<span class="number">2</span>);</span><br><span class="line">        System.out.println(goodById1.toString());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭一级缓存</span></span><br><span class="line">        sqlSession.clearCache();</span><br><span class="line">        System.out.println(<span class="string">"====    🆑 sqlSession缓存    ===="</span>);</span><br><span class="line">        System.out.println(sqlSession1.getMapper(IGoodRepository<span class="class">.<span class="keyword">class</span>).<span class="title">findGoodById</span>(2))</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>结果:</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">Opening JDBC Connection</span><br><span class="line">Created connection 392918519.</span><br><span class="line">Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@176b75f7]</span><br><span class="line">&#x3D;&#x3D;&gt;  Preparing: select * from good where id&#x3D;?</span><br><span class="line">&#x3D;&#x3D;&gt; Parameters: 2(Integer)</span><br><span class="line">&lt;&#x3D;&#x3D;    Columns: id, name</span><br><span class="line">&lt;&#x3D;&#x3D;        Row: 2, 电冰箱</span><br><span class="line">&lt;&#x3D;&#x3D;      Total: 1</span><br><span class="line">Good(id&#x3D;2, name&#x3D;电冰箱, consumers&#x3D;null)</span><br><span class="line">Cache Hit Ratio [com.kawyang.repository.IGoodRepository]: 0.0</span><br><span class="line">Opening JDBC Connection</span><br><span class="line">Created connection 1804126860.</span><br><span class="line">Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@6b88ca8c]</span><br><span class="line">&#x3D;&#x3D;&gt;  Preparing: select * from good where id&#x3D;?</span><br><span class="line">&#x3D;&#x3D;&gt; Parameters: 2(Integer)</span><br><span class="line">&lt;&#x3D;&#x3D;    Columns: id, name</span><br><span class="line">&lt;&#x3D;&#x3D;        Row: 2, 电冰箱</span><br><span class="line">&lt;&#x3D;&#x3D;      Total: 1</span><br><span class="line">Good(id&#x3D;2, name&#x3D;电冰箱, consumers&#x3D;null)</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;    🆑 sqlSession缓存    &#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">Cache Hit Ratio [com.kawyang.repository.IGoodRepository]: 0.0</span><br><span class="line">Good(id&#x3D;2, name&#x3D;电冰箱, consumers&#x3D;null)</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>框架</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
        <tag>缓存</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis-级联操作</title>
    <url>/kawyang/fb315360.html</url>
    <content><![CDATA[<blockquote>
<p>本文介绍了<code>MyBatis</code>的级联操作，通过查询多张表完成数据的获取，关键在于练习 <code>resultMap</code>、<code>association</code>、<code>collection</code> 标签。</p>
</blockquote>
<a id="more"></a>


<h1 id="MyBatis-级联操作"><a href="#MyBatis-级联操作" class="headerlink" title="MyBatis 级联操作"></a>MyBatis 级联操作</h1><p><a href="http://c.biancheng.net/view/4367.html" target="_blank" rel="noopener">详细教程网络资源</a></p>
<p><a href="https://github.com/LYgithub/IDEAProjects/tree/master/MyBatisNodeDemo2" target="_blank" rel="noopener">项目</a></p>
<h2 id="一对一-student-gt-class"><a href="#一对一-student-gt-class" class="headerlink" title="一对一 (student -&gt; class)"></a>一对一 (student -&gt; class)</h2><p>student 包含个人基本信息和内嵌对象 classes。<br>在查询student时，需要联合 student表和classes表进行查询。</p>
<h3 id="数据表"><a href="#数据表" class="headerlink" title="数据表"></a>数据表</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> classes(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> primary <span class="keyword">key</span>,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> classes (<span class="keyword">id</span>,<span class="keyword">name</span>) <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">"一班"</span>),(<span class="number">2</span>,<span class="string">"二班"</span>),(<span class="number">3</span>,<span class="string">"三班"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">10</span>),</span><br><span class="line">    cid <span class="built_in">int</span>,</span><br><span class="line">    <span class="keyword">foreign</span> <span class="keyword">key</span> (cid) <span class="keyword">references</span> classes(<span class="keyword">id</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student (<span class="keyword">id</span>, <span class="keyword">name</span>, cid) </span><br><span class="line">	<span class="keyword">values</span> (<span class="number">1</span>,<span class="string">"KawYang"</span>,<span class="number">1</span>),(<span class="number">2</span>,<span class="string">"KawYang"</span>,<span class="number">2</span>),(<span class="number">3</span>,<span class="string">"张三"</span>,<span class="number">2</span>),(<span class="number">4</span>,<span class="string">"李四"</span>,<span class="number">3</span>),(<span class="number">5</span>,<span class="string">"Tom"</span>,<span class="number">3</span>),(<span class="number">6</span>,<span class="string">"Jary"</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure></div>

<h3 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h3><ul>
<li>Classes类对象</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Classes</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>Student类对象</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	<span class="keyword">private</span> Classes classes;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h3><p>编写数据库操作的接口</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IStudentRepository</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * find by id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> student</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Student <span class="title">findById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * find all</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> student list</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Student&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="Mapper"><a href="#Mapper" class="headerlink" title="Mapper"></a>Mapper</h3><p>mapper🏷️ : <code>namespace</code> 属性映射到 <code>student</code> 的操作接口。<br>resultMap🏷️ : 配置类对象 –&gt; 在 <code>select</code> 标签中，使用 <code>resultMap</code> 属性进行映射。<br>association🏷️ : 注入内嵌对象，<code>javaType</code> 将内嵌对象映射到实体类。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.kawyang.repository.IStudentRepository"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"student"</span> <span class="attr">type</span>=<span class="string">"com.kawyang.entity.Student"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"sid"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"sname"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"classes"</span> <span class="attr">ofType</span>=<span class="string">"com.kawyang.entity.Classes"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"cid"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"cname"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">resultMap</span>=<span class="string">"student"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">        select s.id as sid,s.name as sname, c.id as cid, c.name as cname</span><br><span class="line">        from student s,classes c</span><br><span class="line">        where s.cid=c.id and s.id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultMap</span>=<span class="string">"student"</span>&gt;</span></span><br><span class="line">        select s.id as sid,s.name as sname, c.id as cid, c.name as cname</span><br><span class="line">        from student s,classes c</span><br><span class="line">        where s.cid=c.id</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></div>


<h2 id="一对多-class-gt-studentes"><a href="#一对多-class-gt-studentes" class="headerlink" title="一对多 (class -&gt; studentes)"></a>一对多 (class -&gt; studentes)</h2><p>一个班级含有多个👨‍🎓，通过查询班级信息，能够将班级中的所有学生信息查询出来<br>需要联合 classes类和student进行查询。</p>
<h3 id="数据表-1"><a href="#数据表-1" class="headerlink" title="数据表"></a>数据表</h3><p>同上</p>
<h3 id="实体类-1"><a href="#实体类-1" class="headerlink" title="实体类"></a>实体类</h3><ul>
<li>ClassesStu<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassesStu</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> id;</span><br><span class="line">	String name;</span><br><span class="line">	List&lt;Student&gt; students;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

</li>
</ul>
<h3 id="Repository-1"><a href="#Repository-1" class="headerlink" title="Repository"></a>Repository</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IClassesStuRepository</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * find classesStu by id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> classesStu</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">ClassesStu <span class="title">findById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * find all classesStu</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> classesStu list</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;ClassesStu&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="Mapper-1"><a href="#Mapper-1" class="headerlink" title="Mapper"></a>Mapper</h3><p>配置文件resultMap</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"classesStu"</span> <span class="attr">type</span>=<span class="string">"com.kawyang.entity.ClassesStu"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"cid"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"cname"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"students"</span> <span class="attr">ofType</span>=<span class="string">"com.kawyang.entity.Student"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"sid"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"sname"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>collection🏷️ : 将查询的 <code>cid &amp; cname</code> 相同的结果，将 sid 和 sname 封装成 <code>ofType</code> 指定类型的对象，并将多个对象以集合的方式返回。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="code"><pre><span class="line">==&gt;  Preparing: select c.id as cid, c.name as cname, s.id as sid, s.name as sname from student s, classes c where c.id=s.cid</span><br><span class="line">==&gt; Parameters: </span><br><span class="line">&lt;==    Columns: cid, cname, sid, sname</span><br><span class="line">&lt;==        Row: 1, 一班, 1, KawYang</span><br><span class="line">&lt;==        Row: 2, 二班, 2, KawYang</span><br><span class="line">&lt;==        Row: 2, 二班, 3, 张三</span><br><span class="line">&lt;==        Row: 3, 三班, 4, 李四</span><br><span class="line">&lt;==        Row: 3, 三班, 5, Tom</span><br><span class="line">&lt;==        Row: 3, 三班, 6, Jary</span><br><span class="line">&lt;==      Total: 6</span><br></pre></td></tr></table></figure></div>

<h2 id="多对多-goods-lt-gt-consumers"><a href="#多对多-goods-lt-gt-consumers" class="headerlink" title="多对多 (goods &lt;-&gt; consumers)"></a>多对多 (goods &lt;-&gt; consumers)</h2><pre><code>一种商品可以被多个消费者购买
一个消费者可以购买多个商品
商品与消费者事多对多的关系。</code></pre><h3 id="数据表-2"><a href="#数据表-2" class="headerlink" title="数据表"></a>数据表</h3><p>good : 商品信息表<br>consumer : 消费者信息表<br>con_good : 中间表</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> good(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> <span class="keyword">not</span> <span class="literal">null</span> ,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">30</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> good (<span class="keyword">id</span>, <span class="keyword">name</span>) <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">"电视"</span>),(<span class="number">2</span>, <span class="string">"电冰箱"</span>),(<span class="number">3</span>, <span class="string">"洗衣机"</span>),(<span class="number">4</span>,<span class="string">"笔记本"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> consumer(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">30</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> consumer (<span class="keyword">id</span>, <span class="keyword">name</span>) <span class="keyword">VALUES</span>  (<span class="number">1</span>,<span class="string">"KawYang"</span>),(<span class="number">2</span>,<span class="string">"李四"</span>),(<span class="number">3</span>,<span class="string">"张三"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> con_good(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> <span class="keyword">not</span> <span class="literal">null</span> ,</span><br><span class="line">    gid <span class="built_in">int</span>,</span><br><span class="line">    cid <span class="built_in">int</span>,</span><br><span class="line">    <span class="keyword">foreign</span> <span class="keyword">key</span> (gid) <span class="keyword">references</span> good(<span class="keyword">id</span>),</span><br><span class="line">    <span class="keyword">foreign</span> <span class="keyword">key</span> (cid) <span class="keyword">references</span> consumer(<span class="keyword">id</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> con_good (<span class="keyword">id</span>, gid, cid) <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>),(<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>),(<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>),(<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>),(<span class="number">5</span>,<span class="number">4</span>,<span class="number">2</span>),(<span class="number">6</span>,<span class="number">3</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure></div>

<h3 id="Mapper-2"><a href="#Mapper-2" class="headerlink" title="Mapper"></a>Mapper</h3><pre><code>多对多相当于两个一对多的关系，需要配置两个xml文件</code></pre><ul>
<li><p>IGoodMapper</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.kawyang.repository.IGoodRepository"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"good"</span> <span class="attr">type</span>=<span class="string">"com.kawyang.entity.Good"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"gid"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"gname"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"consumers"</span> <span class="attr">ofType</span>=<span class="string">"com.kawyang.entity.Consumer"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"cid"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"cname"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultMap</span>=<span class="string">"good"</span> &gt;</span></span><br><span class="line">        select g.id as gid,g.name as gname, c.id as cid, c.name as cname</span><br><span class="line">        from good g,consumer c,con_good m</span><br><span class="line">        where g.id=m.gid and m.cid=c.id</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">resultMap</span>=<span class="string">"good"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">        select c.id as cid,c.name as cname,g.id as gid,g.name as gname</span><br><span class="line">        from Good as g,Consumer as c, Con_good m</span><br><span class="line">        where c.id = m.cid and g.id=m.gid and g.id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
</li>
<li><p>IConsumerMapper</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.kawyang.repository.IConsumerRepository"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"consumer"</span> <span class="attr">type</span>=<span class="string">"com.kawyang.entity.Consumer"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"name"</span> <span class="attr">property</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"goods"</span> <span class="attr">ofType</span>=<span class="string">"com.kawyang.entity.Good"</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"gid"</span> <span class="attr">property</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"gname"</span> <span class="attr">property</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultMap</span>=<span class="string">"consumer"</span> &gt;</span></span><br><span class="line">        select c.id as id,c.name as name,g.id as gid,g.name as gname</span><br><span class="line">        from Good as g,Consumer as c, Con_good m</span><br><span class="line">        where c.id = m.cid and g.id=m.gid;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">resultMap</span>=<span class="string">"consumer"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">        select c.id as id,c.name as name,g.id as gid,g.name as gname</span><br><span class="line">        from Good as g,Consumer as c, Con_good m</span><br><span class="line">        where c.id = m.cid and g.id=m.gid and g.id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></div>






</li>
</ul>
]]></content>
      <categories>
        <category>框架</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis-模糊查询&amp;动态SQL</title>
    <url>/kawyang/5882fb3c.html</url>
    <content><![CDATA[<blockquote>
<p>本文讲述了模糊查询的操作方法，配置实体类全局路径方法等内容，主要对 <code>MyBatis</code> 的动态SQL查询方式进行了相关总结。</p>
</blockquote>
<a id="more"></a>

<h2 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h2><ul>
<li>#{} sql语句占位符</li>
<li>${} sql语句拼接</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="comment">#&#123;data&#125;;</span></span><br><span class="line"><span class="comment">-- =&gt; select * from student where name like ?;</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'%$&#123;data&#125;%'</span>; </span><br><span class="line"><span class="comment">-- =&gt; select * from student where name like '%data%';</span></span><br></pre></td></tr></table></figure></div>

<h2 id="配置实体类路径-别名"><a href="#配置实体类路径-别名" class="headerlink" title="配置实体类路径 (别名)"></a>配置实体类路径 (别名)</h2><p>在全局配置文件中使用</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--  别名设置，放在settings标签之下，environment 标签之前  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 单个别名配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">"student"</span> <span class="attr">type</span>=<span class="string">"com.kawyang.entity.Student"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--   批量别名，扫描包内所有内容，别名为类名(首字母大小写都可以)     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.kawyang.entity"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>配置文件书写顺序<br>properties?,settings?,typeAliases?,typeHandlers?,objectFactory?,<br>objectWrapperFactory?,plugins?,environments?,databaseIdProvider?,mappers?</p>
</blockquote>
<h2 id="动态SQL"><a href="#动态SQL" class="headerlink" title="动态SQL"></a>动态SQL</h2><h3 id="if"><a href="#if" class="headerlink" title="if"></a>if</h3><blockquote>
<p>通过 if 标签可以判断是否包含查询的字段</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByStudent"</span> <span class="attr">parameterType</span>=<span class="string">"student"</span> <span class="attr">resultType</span>=<span class="string">"student"</span>&gt;</span></span><br><span class="line">        select * from student where 1=1</span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"name != null and name != ''"</span>&gt;</span></span><br><span class="line">            and name like #&#123;name&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"age != -1"</span>&gt;</span></span><br><span class="line">            and age=#&#123;age&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h3 id="where"><a href="#where" class="headerlink" title="where"></a>where</h3><blockquote>
<p>通过 where 标签可以解决以上 1=1 的多余内容  </p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByStudent"</span> <span class="attr">parameterType</span>=<span class="string">"student"</span> <span class="attr">resultType</span>=<span class="string">"student"</span>&gt;</span></span><br><span class="line">        select * from student</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">	        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"name != null and name != ''"</span>&gt;</span></span><br><span class="line">	            and name like #&#123;name&#125;</span><br><span class="line">	        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">	        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"age != -1"</span>&gt;</span></span><br><span class="line">	            and age=#&#123;age&#125;</span><br><span class="line">	        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>where 会自动判断第一条判断条件，并将 and 删除</p>
<h3 id="foreach"><a href="#foreach" class="headerlink" title="foreach"></a>foreach</h3><p>select * from student where id in (1,2,3);</p>
<p>后端传递的参数为 Integer 的 集合<br>需要对该集合进行封装</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListIds</span> <span class="keyword">extends</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> List&lt;Integer&gt; listIds;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 查询所有用户在 id 的集合之中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findInIds"</span> <span class="attr">resultType</span>=<span class="string">"student"</span> <span class="attr">parameterType</span>=<span class="string">"ListIds"</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!--select * from student where id in (1,2,3);--&gt;</span></span><br><span class="line">	select * from student</span><br><span class="line">	<span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"ids != null and ids.size() &gt; 0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"student"</span> <span class="attr">open</span>=<span class="string">"id in ( "</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">separator</span>=<span class="string">","</span> <span class="attr">item</span>=<span class="string">"id"</span> &gt;</span></span><br><span class="line">				#&#123;id&#125;</span><br><span class="line">			<span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIds"</span> <span class="attr">resultType</span>=<span class="string">"com.kawyang.entity.Student"</span> <span class="attr">parameterType</span>=<span class="string">"com.kawyang.entity.ListIds"</span>&gt;</span></span><br><span class="line">        select * from student</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">			foreach </span></span><br><span class="line"><span class="comment">			collection="需要遍历的元素" </span></span><br><span class="line"><span class="comment">			open="元素之前的部分"</span></span><br><span class="line"><span class="comment">			close="之后部分" </span></span><br><span class="line"><span class="comment">			separator="分割方式" </span></span><br><span class="line"><span class="comment">			item="属性名" &lt;/foreach&gt;  --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"ids"</span>  <span class="attr">open</span>=<span class="string">"id in ( "</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">separator</span>=<span class="string">","</span> <span class="attr">item</span>=<span class="string">"id"</span> &gt;</span></span><br><span class="line">                #&#123;id&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></div>


<h3 id="choose"><a href="#choose" class="headerlink" title="choose"></a>choose</h3><p>choose 标签，类似 java 中的 <code>switch-case-default</code> 结构。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByStu"</span> <span class="attr">parameterType</span>=<span class="string">"com.item.entity.Student"</span> &gt;</span></span><br><span class="line">    select * from student</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"id != 0"</span>&gt;</span></span><br><span class="line">                id = #&#123;id&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"name != null"</span>&gt;</span></span><br><span class="line">                name=#&#123;name&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h3 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h3><p>使用 sql 标签 将 使用次数较多的sql语句用sql🏷️进行定义，使用 include🏷️引入到真正的查询语句中，使用方便。<br>例子：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"selectAll"</span> &gt;</span></span><br><span class="line">    select * from student</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByStudent"</span> <span class="attr">parameterType</span>=<span class="string">"com.kawyang.entity.Student"</span> <span class="attr">resultType</span>=<span class="string">"com.kawyang.entity.Student"</span> &gt;</span></span><br><span class="line">--         select * from student</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"selectAll"</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"id != 0"</span>&gt;</span></span><br><span class="line">            id=#&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"name != null"</span>&gt;</span></span><br><span class="line">            name=#&#123;name&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h3 id="注解形式使用动态SQL-待补充"><a href="#注解形式使用动态SQL-待补充" class="headerlink" title="注解形式使用动态SQL(待补充)"></a>注解形式使用动态SQL(待补充)</h3><p>添加  <code>&lt;script&gt;</code> 标签，即可使用 xml 中形式进行配置。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Select</span>(<span class="string">"&lt;script&gt;"</span> +</span><br><span class="line">        <span class="string">"select * from student"</span> +</span><br><span class="line">        <span class="string">"        &lt;where&gt;"</span> +</span><br><span class="line">        <span class="string">"            &lt;if test=\"ids != null and ids.size&gt;0\"&gt;"</span> +</span><br><span class="line">        <span class="string">"                &lt;foreach collection=\"ids\"  open=\"id in ( \" close=\")\" separator=\",\" item=\"id\" &gt;"</span> +</span><br><span class="line">        <span class="string">"                    #&#123;id&#125;"</span> +</span><br><span class="line">        <span class="string">"                &lt;/foreach&gt;"</span> +</span><br><span class="line">        <span class="string">"            &lt;/if&gt;"</span> +</span><br><span class="line">        <span class="string">"        &lt;/where&gt; "</span> +</span><br><span class="line">        <span class="string">"&lt;/script&gt;"</span>)</span><br><span class="line"><span class="function">List&lt;Student&gt; <span class="title">findByIds</span><span class="params">(ListIds listIds)</span></span>;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>框架</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring-AOP</title>
    <url>/kawyang/97375e6e.html</url>
    <content><![CDATA[<blockquote>
<p>AOP</p>
</blockquote>
<a id="more"></a>
<h2 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h2><p>Aspect Oriented Programming  —- 面向切面编程</p>
<ul>
<li>降低耦合度</li>
<li>易拓展</li>
<li>复用</li>
<li>非业务集中，便于统一管理</li>
<li>业务代码比较纯粹，没有其他代码影响</li>
</ul>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul>
<li><p>创建Maven工程，添加坐标</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

</li>
</ul>
<p>Invocationhandler</p>
<p>  生成代理类的类，</p>
<p>  imlements InvocationHandler</p>
<ul>
<li><p>接收jjadf 啊收到回复ahsudjf 委托对象</p>
</li>
<li><p>设置返回代理类</p>
<p>Proxy.newProxyInstance()</p>
</li>
<li><p>编写委托对象方法</p>
</li>
</ul>
<h3 id="Spring框架对AOP进行封装"><a href="#Spring框架对AOP进行封装" class="headerlink" title="Spring框架对AOP进行封装"></a>Spring框架对AOP进行封装</h3><p>不需要创建InvocationHandler，只需要创建一个切面对象，将业务代码在切面中完成即可</p>
<ul>
<li>创建切面类对象 Aspect（切面）</li>
<li>添加注解</li>
</ul>
<p>LoggerAspect</p>
<ul>
<li><code>@Aspect</code> ： 表示该类为切面类</li>
<li><code>@Component</code>：将该类对象注入到IoC容器中</li>
<li><code>@Befor</code> :表示方法执行的具体位置和时机  </li>
</ul>
<p>CalImpl2 也需要添加<code>@Component</code></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  自动扫描  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.item"</span> &gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;bean class="com.item.AOP.LoggerAspect" p:id="" /&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  使 Aspect 标签生效，为目标类自动生成代理对象  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>context:component-scan 标签是扫描包内所有添加@Component注解的类，注入到IoC中</p>
<p>aop:aspectj-autoproxy 让Spring结合切面类和目标类自动生成代理对象。</p>
<ul>
<li>切面：横切关注点被模块化的抽象对象</li>
<li>通知：切面对象完成的工作（非业务代码，日志…）</li>
<li>目标：被通知的对象，即被切面的对象</li>
<li>代理：切面、通知、目标混合之后的对象</li>
<li>连接点：通知插入业务代码的具体位置</li>
<li>切点：AOP通过切点定位到连接点</li>
</ul>
]]></content>
      <categories>
        <category>框架</category>
      </categories>
      <tags>
        <tag>Spring</tag>
        <tag>AOP</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring-工厂方法</title>
    <url>/kawyang/6c92115f.html</url>
    <content><![CDATA[<blockquote>
<p>📝 : Spring的工厂方法，将🏭 交给 <code>IoC容器</code> 进行管理，🏭包括：静态🏭、实例🏭。</p>
</blockquote>
<a id="more"></a>

<h2 id="Spring-的工厂方法"><a href="#Spring-的工厂方法" class="headerlink" title="Spring 的工厂方法"></a>Spring 的工厂方法</h2><blockquote>
<p>使用工厂创建独享，并将工厂交给 IoC容器 进行管理</p>
</blockquote>
<h3 id="静态工厂"><a href="#静态工厂" class="headerlink" title="静态工厂"></a>静态工厂</h3><ul>
<li>实体类</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    Long id;</span><br><span class="line">    String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>静态工厂</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.item.factory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.item.Car;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CarFactory</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> Map&lt;Long, Car&gt; carMap;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        carMap = <span class="keyword">new</span> HashMap&lt;Long, Car&gt;();</span><br><span class="line">        carMap.put(<span class="number">1L</span>, <span class="keyword">new</span> Car(<span class="number">1L</span>, <span class="string">"宝马"</span>));</span><br><span class="line">        carMap.put(<span class="number">2L</span>, <span class="keyword">new</span> Car(<span class="number">2L</span>, <span class="string">"奔驰"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Car <span class="title">getCar</span><span class="params">(Long id, String s)</span></span>&#123;</span><br><span class="line">        System.out.println(s);</span><br><span class="line">        <span class="keyword">return</span> carMap.get(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>配置工厂</li>
</ul>
<blockquote>
<p>将类使用bean🏷️配置到工厂的方法中，IoC容器使用配置的方法，根据传递的参数来获取对象。</p>
</blockquote>
<p>配置参数 : index (0开始、形参位置)、name(形参名称)</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置静态工厂 默认为单例模式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"car"</span> <span class="attr">class</span>=<span class="string">"com.item.factory.CarFactory"</span> <span class="attr">factory-method</span>=<span class="string">"getCar"</span> <span class="attr">scope</span>=<span class="string">"prototype"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置参数 getCar--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">value</span>=<span class="string">"2"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"s"</span> <span class="attr">value</span>=<span class="string">"String"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>获取IoC容器中对象</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"config-factory.xml"</span>);</span><br><span class="line">        Car car =(Car) context.getBean(<span class="string">"car"</span>);</span><br><span class="line">        System.out.println(car);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="实例工厂"><a href="#实例工厂" class="headerlink" title="实例工厂"></a>实例工厂</h3><ul>
<li>工厂类</li>
</ul>
<p>同上</p>
<ul>
<li>配置文件</li>
</ul>
<blockquote>
<p>在配置文件中配置两个 bean (🏭bean、获取Car的bean)，将🏭类先交给 IoC容器管理，然后再配置Car，调用容器中🏭创建对象的方法。</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置工厂 bean--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"factory"</span> <span class="attr">class</span>=<span class="string">"com.item.factory.InstanceCarFactory"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置对象 Car  使用工厂 factory获取  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"car2"</span> <span class="attr">factory-bean</span>=<span class="string">"factory"</span> <span class="attr">factory-method</span>=<span class="string">"getCar"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"2"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>使用</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    InstanceCarFactory factory = <span class="keyword">new</span> InstanceCarFactory();</span><br><span class="line">    System.out.println(factory.getCar(<span class="number">1L</span>));</span><br><span class="line"></span><br><span class="line">    ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"config-factory.xml"</span>);</span><br><span class="line">    Car car2 = (Car) context.getBean(<span class="string">"car2"</span>);</span><br><span class="line">    System.out.println(car2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



]]></content>
      <categories>
        <category>框架</category>
      </categories>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring-IoC(控制反转)&amp;DI(依赖注入)</title>
    <url>/kawyang/6c92115f.html</url>
    <content><![CDATA[<blockquote>
<p>本文主要记录了 <code>Spring</code> 框架的 <code>IoC &amp; ID</code> 基本内容。</p>
</blockquote>
<a id="more"></a>

<h2 id="Spring框架两大核心机制"><a href="#Spring框架两大核心机制" class="headerlink" title="Spring框架两大核心机制"></a>Spring框架两大核心机制</h2><ul>
<li>IoC （控制翻转) / DI （依赖注入)</li>
<li>AOP  (面向切面编程)</li>
</ul>
<p>企业级开发框架，是软件设计层面的框架，优势在于可以将应用程序进行分层</p>
<p>MVC ：Struts2 、Spring MVC</p>
<p>ORMapping ： Hibernate、MyBatis、Spring Data</p>
<p><img src="https://gitee.com/KawYang/image/raw/master/img/image-20200615165841634.png" alt="image-20200615165841634"></p>
<p>优点：</p>
<ol>
<li>容易与第三方框架整合</li>
<li>集中管理</li>
</ol>
<h2 id="IoC"><a href="#IoC" class="headerlink" title="IoC"></a>IoC</h2><blockquote>
<p>IoC (控制反转) : 将对象使用交给 Spring 进行管理。即创建对象由IoC容器创建。</p>
</blockquote>
<h3 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h3><p>步骤：</p>
<ul>
<li>创建maven项目，添加pom依赖</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 简化实体类代码开发 @Data 自动生成 get、set方法  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>创建实体类</li>
</ul>
<p>传统方式：手动 new 方式创建对象</p>
<p>IoC方式：在配置文件中添加管理对象，xml格式自定义文件名，<code>resources</code> 下</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"student"</span> <span class="attr">class</span>=<span class="string">"com.item.Student"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"张三"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">value</span>=<span class="string">"12"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>使用方法</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//加载配置文件</span></span><br><span class="line">ApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"iocconfig.xml"</span>);</span><br><span class="line">Object student = applicationContext.getBean(<span class="string">"student"</span>);</span><br><span class="line">System.out.println(student);</span><br></pre></td></tr></table></figure></div>

<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>通过配置Bean标签进行管理</p>
<ul>
<li><code>id</code>:  对象名, <code>getBean</code> 的 查找参数。</li>
<li><code>class</code> ： 对象模版类 <code>必须有无参构造</code> ，通过反射机制创建对象， 反射机制是调用无参构造创建</li>
<li><code>property</code> ：完成属性赋值<ul>
<li><code>name</code> ： 属性名</li>
<li><code>value</code> ： 属性值 String 直接赋值，其他的引用类型，不能通过value赋值，</li>
<li><code>ref</code>  : 将IoC中的另外一个Bean添加，<code>依赖注入</code></li>
</ul>
</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"student"</span> <span class="attr">class</span>=<span class="string">"com.item.Student"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"张三"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">value</span>=<span class="string">"12"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"classes"</span> <span class="attr">ref</span>=<span class="string">"classes"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"classes"</span> <span class="attr">class</span>=<span class="string">"com.item.Classes"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"一班"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="IoC底层原理"><a href="#IoC底层原理" class="headerlink" title="IoC底层原理"></a>IoC底层原理</h2><blockquote>
<p>读取配置文件 -&gt; 获取对象创建信息 -&gt; 反射创建对象并存储 -&gt; 获取对象</p>
</blockquote>
<ul>
<li>读取xml，解析</li>
<li>通过反射机制实例化配置文件中所有的Bean</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.item.ioc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.dom4j.Document;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.Element;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.io.SAXReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassPathXmlApplicationContext</span> <span class="keyword">implements</span> <span class="title">ApplicationContext</span></span>&#123;</span><br><span class="line">    <span class="comment">//存储创建的对象</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, Object&gt; ioc = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ClassPathXmlApplicationContext</span><span class="params">(String path)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SAXReader reader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">        Document read = reader.read(<span class="string">"./src/main/resources/"</span> + path);</span><br><span class="line">        <span class="comment">// 解析 xml 获取配置信息</span></span><br><span class="line">        Element rootElement = read.getRootElement();</span><br><span class="line">        Iterator iterator = rootElement.elementIterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext())&#123;</span><br><span class="line">        	<span class="comment">/** 循环每一个类配置信息 */</span></span><br><span class="line">            Element element = (Element) iterator.next();</span><br><span class="line">            String id = element.attributeValue(<span class="string">"id"</span>);</span><br><span class="line">            String className = element.attributeValue(<span class="string">"class"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//通过反射创建对象</span></span><br><span class="line">            Class aClass = Class.forName(className);</span><br><span class="line">            Constructor constructor = aClass.getConstructor();</span><br><span class="line">            Object o = constructor.newInstance();</span><br><span class="line"></span><br><span class="line">            Iterator iterator1 = element.elementIterator();</span><br><span class="line">            <span class="keyword">while</span> (iterator1.hasNext())&#123;</span><br><span class="line">                Element next =(Element) iterator1.next();</span><br><span class="line">                System.out.println(<span class="string">"---------------"</span>);</span><br><span class="line">                String name = next.attributeValue(<span class="string">"name"</span>);</span><br><span class="line">                String value = next.attributeValue(<span class="string">"value"</span>);</span><br><span class="line"></span><br><span class="line">                String ref = next.attributeValue(<span class="string">"ref"</span>);</span><br><span class="line">                System.out.println(ref);</span><br><span class="line">                <span class="comment">//基本变量赋值</span></span><br><span class="line">                <span class="keyword">if</span>(ref == <span class="keyword">null</span>)&#123;</span><br><span class="line">                    String mothedName = <span class="string">"set"</span> + name.substring(<span class="number">0</span>, <span class="number">1</span>).toUpperCase() + name.substring(<span class="number">1</span>);</span><br><span class="line">                    System.out.print(name+ <span class="string">"\t"</span> + value + <span class="string">"\t"</span>);</span><br><span class="line">                    Field field = aClass.getDeclaredField(name);</span><br><span class="line">                    System.out.println(field.getType().getName());</span><br><span class="line">                    Method method = aClass.getDeclaredMethod(mothedName, field.getType());</span><br><span class="line">                    Object v = <span class="keyword">null</span>;</span><br><span class="line">                    <span class="keyword">if</span>(field.getType().getName() == <span class="string">"int"</span>)&#123;</span><br><span class="line">                        v = Integer.parseInt(value);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(field.getType().getName() == <span class="string">"String"</span>)&#123;</span><br><span class="line">                        v = value;</span><br><span class="line">                    &#125;</span><br><span class="line">                    ....</span><br><span class="line">                    method.invoke(o, v);</span><br><span class="line"></span><br><span class="line">                &#125;<span class="keyword">else</span>&#123; <span class="comment">//注入</span></span><br><span class="line">                    <span class="comment">//直接赋值Bean</span></span><br><span class="line"></span><br><span class="line">                    Object obj1 = ioc.get(<span class="string">"Classes"</span>);</span><br><span class="line">                    System.out.println(obj1);</span><br><span class="line"></span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ioc.put(id, o);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"============="</span>);</span><br><span class="line">        System.out.println(ioc);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getBean</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ioc.get(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="运行时类进行获取Bean"><a href="#运行时类进行获取Bean" class="headerlink" title="运行时类进行获取Bean"></a>运行时类进行获取Bean</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//通过配置文件 🆔 进行获取</span></span><br><span class="line">Object student = applicationContext.getBean(<span class="string">"student"</span>);</span><br><span class="line"><span class="comment">//通过 运行时类 获取</span></span><br><span class="line">Student bean = applicationContext.getBean(Student<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">System.out.println(bean);</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>配置文件中只能有一个实例 ,如下抛异常</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"classes"</span> <span class="attr">class</span>=<span class="string">"com.item.Classes"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"一班"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"classes2"</span> <span class="attr">class</span>=<span class="string">"com.item.Classes"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"一班"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="有参构造创建"><a href="#有参构造创建" class="headerlink" title="有参构造创建"></a>有参构造创建</h2><ul>
<li>在实例中创建有参构造</li>
<li>在xml中配置</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"classes3"</span> <span class="attr">class</span>=<span class="string">"com.item.Classes"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  两种设置参数方式。--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"三班"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">value</span>=<span class="string">"2"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="集合注入"><a href="#集合注入" class="headerlink" title="集合注入"></a>集合注入</h2><blockquote>
<p>使用 <code>list</code> 标签 注入类型的集合对象。</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"student"</span> <span class="attr">class</span>=<span class="string">"com.item.Student"</span> &gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"张三"</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">value</span>=<span class="string">"12"</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"classes_List"</span> &gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"classes"</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"classes2"</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"classes"</span> <span class="attr">class</span>=<span class="string">"com.item.Classes"</span> &gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"一班"</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"classes2"</span> <span class="attr">class</span>=<span class="string">"com.item.Classes"</span> &gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"一班"</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="Scope-作用域"><a href="#Scope-作用域" class="headerlink" title="Scope 作用域"></a>Scope 作用域</h2><p>Spring 管理的bean是根据 <code>scope</code> 来生成的，表示bean的作用域</p>
<ul>
<li>singleton：单例模式，在加载文件时创建bean，通过IoC容器获取的bean是 <code>唯一</code> 的。</li>
<li>prototype：原型模式，在调用getBean时创建bean对象，通过IoC容器获取的bean是 <code>不同</code> 的。</li>
<li>request：请求，表示在一次HTTP请求内有效。</li>
<li>session：会话，表示在一个用户会话内有效。</li>
</ul>
<p>request和session只是用于web项目，大多情况下用单例和原型较多</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"classes"</span> <span class="attr">class</span>=<span class="string">"com.item.Classes"</span> <span class="attr">scope</span>=<span class="string">"singleton"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"一班"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="Spring-的继承"><a href="#Spring-的继承" class="headerlink" title="Spring 的继承"></a>Spring 的继承</h2><blockquote>
<p>Java 是类层面的继承，子类可以继承父类的内部结构信息。<br>Spring 是对象层面的继承，子对象可以继承父对象的属性值。(一种赋值方式)</p>
</blockquote>
<ul>
<li>对象层面的继承</li>
<li>可以使不同类之间继承，子类中必须包含父类所有属性</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"classes"</span> <span class="attr">class</span>=<span class="string">"com.item.Classes"</span> <span class="attr">scope</span>=<span class="string">"singleton"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"一班"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"cla"</span> <span class="attr">class</span>=<span class="string">"com.item.Classes"</span> <span class="attr">parent</span>=<span class="string">"classes"</span> &gt;</span></span><br><span class="line">	<span class="comment">&lt;!--对属性进行重写 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"3"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></div>


<h2 id="Spring-的依赖"><a href="#Spring-的依赖" class="headerlink" title="Spring 的依赖"></a>Spring 的依赖</h2><p>描述bean和bean之间的<code>关系</code>，配置依赖之后，被依赖对象一定<code>先创建</code>，再创建依赖bean</p>
<blockquote>
<p>修改创建顺序</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"cla"</span> <span class="attr">class</span>=<span class="string">"com.item.Classes"</span> <span class="attr">parent</span>=<span class="string">"classes"</span> <span class="attr">depends-on</span>=<span class="string">"student"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"3"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/KawYang/image/raw/master/img/image-20200620174623885.png" alt="image-20200620174623885"></p>
<h2 id="Spring-的-P-命名空间"><a href="#Spring-的-P-命名空间" class="headerlink" title="Spring 的 P 命名空间"></a>Spring 的 P 命名空间</h2><p>p 命名空间是对 IoC/ DI 的简化</p>
<blockquote>
<p>引入约束</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>使用方法</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--p命名空间--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"classes_p"</span> <span class="attr">class</span>=<span class="string">"com.item.Classes"</span> <span class="attr">p:id</span>=<span class="string">"1"</span> <span class="attr">p:name</span>=<span class="string">"adad"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"student_p"</span> <span class="attr">class</span>=<span class="string">"com.item.Student"</span> <span class="attr">p:id</span>=<span class="string">"1"</span> <span class="attr">p:name</span>=<span class="string">"李四"</span> <span class="attr">p:age</span>=<span class="string">"12"</span> <span class="attr">p:classes-ref</span>=<span class="string">"classes_p"</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="IoC自动装载（Autowire）"><a href="#IoC自动装载（Autowire）" class="headerlink" title="IoC自动装载（Autowire）"></a>IoC自动装载（Autowire）</h2><p>IoC负责创建对象，<code>DI</code> 完成对象的依赖注入，配置 <code>property</code> 标签的 <code>ref</code>属性。</p>
<p>IoC自动选择bean 进行注入</p>
<ul>
<li><p>byName ：通过名称装载</p>
<blockquote>
<p>按照名字进行装载，没有为null</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--传统装载--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"student"</span> <span class="attr">class</span>=<span class="string">"com.item.Student"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"张三"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">value</span>=<span class="string">"12"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"classes"</span> <span class="attr">ref</span>=<span class="string">"classes"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--自动装载--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"student2"</span> <span class="attr">class</span>=<span class="string">"com.item.Student"</span> <span class="attr">autowire</span>=<span class="string">"byName"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"张三"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">value</span>=<span class="string">"12"</span> /&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
</li>
<li><p>byType ： 通过类型装载</p>
</li>
</ul>
<blockquote>
<p>多个同类型，抛出异常，不知装载那个.</p>
</blockquote>
]]></content>
      <categories>
        <category>框架</category>
      </categories>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring-IoC(控制反转)&amp;DI(依赖注入)</title>
    <url>/kawyang/92a38b2.html</url>
    <content><![CDATA[<h2 id="原型模式"><a href="#原型模式" class="headerlink" title="原型模式"></a>原型模式</h2><blockquote>
<p>指定原型实例制定创建对象的类型，通过拷贝完成对象创建。</p>
</blockquote>
<a id="more"></a>
<blockquote>
<p>Java 的克隆机制</p>
</blockquote>
<p>实现 <code>Cloneable</code> 标记接口<br>需要实现 <code>clone</code> 方法</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> 设计模式.原型模式;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LiYang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Project</span> Name: Java设计模式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span> Name: 设计模式.原型模式</span></span><br><span class="line"><span class="comment"> * Created by MacBook Air on 2020/07/17.</span></span><br><span class="line"><span class="comment"> * Copyright © 2020 LiYang. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Product product = <span class="keyword">new</span> Product();</span><br><span class="line">        Product clone = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            clone = ((Product) product.clone());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (CloneNotSupportedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        clone.setId(<span class="number">1</span>);</span><br><span class="line">        System.out.println(clone.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Product</span> <span class="keyword">implements</span> <span class="title">Cloneable</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> id = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Product&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates and returns a copy of this object.  The precise meaning</span></span><br><span class="line"><span class="comment">     * of "copy" may depend on the class of the object. The general</span></span><br><span class="line"><span class="comment">     * intent is that, for any object &#123;<span class="doctag">@code</span> x&#125;, the expression:</span></span><br><span class="line"><span class="comment">     * &lt;blockquote&gt;</span></span><br><span class="line"><span class="comment">     * &lt;pre&gt;</span></span><br><span class="line"><span class="comment">     * x.clone() != x&lt;/pre&gt;&lt;/blockquote&gt;</span></span><br><span class="line"><span class="comment">     * will be true, and that the expression:</span></span><br><span class="line"><span class="comment">     * &lt;blockquote&gt;</span></span><br><span class="line"><span class="comment">     * &lt;pre&gt;</span></span><br><span class="line"><span class="comment">     * x.clone().getClass() == x.getClass()&lt;/pre&gt;&lt;/blockquote&gt;</span></span><br><span class="line"><span class="comment">     * will be &#123;<span class="doctag">@code</span> true&#125;, but these are not absolute requirements.</span></span><br><span class="line"><span class="comment">     * While it is typically the case that:</span></span><br><span class="line"><span class="comment">     * &lt;blockquote&gt;</span></span><br><span class="line"><span class="comment">     * &lt;pre&gt;</span></span><br><span class="line"><span class="comment">     * x.clone().equals(x)&lt;/pre&gt;&lt;/blockquote&gt;</span></span><br><span class="line"><span class="comment">     * will be &#123;<span class="doctag">@code</span> true&#125;, this is not an absolute requirement.</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * By convention, the returned object should be obtained by calling</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@code</span> super.clone&#125;.  If a class and all of its superclasses (except</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@code</span> Object&#125;) obey this convention, it will be the case that</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@code</span> x.clone().getClass() == x.getClass()&#125;.</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * By convention, the object returned by this method should be independent</span></span><br><span class="line"><span class="comment">     * of this object (which is being cloned).  To achieve this independence,</span></span><br><span class="line"><span class="comment">     * it may be necessary to modify one or more fields of the object returned</span></span><br><span class="line"><span class="comment">     * by &#123;<span class="doctag">@code</span> super.clone&#125; before returning it.  Typically, this means</span></span><br><span class="line"><span class="comment">     * copying any mutable objects that comprise the internal "deep structure"</span></span><br><span class="line"><span class="comment">     * of the object being cloned and replacing the references to these</span></span><br><span class="line"><span class="comment">     * objects with references to the copies.  If a class contains only</span></span><br><span class="line"><span class="comment">     * primitive fields or references to immutable objects, then it is usually</span></span><br><span class="line"><span class="comment">     * the case that no fields in the object returned by &#123;<span class="doctag">@code</span> super.clone&#125;</span></span><br><span class="line"><span class="comment">     * need to be modified.</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * 数组拷贝方式是浅拷贝</span></span><br><span class="line"><span class="comment">     * The method &#123;<span class="doctag">@code</span> clone&#125; for class &#123;<span class="doctag">@code</span> Object&#125; performs a</span></span><br><span class="line"><span class="comment">     * specific cloning operation. First, if the class of this object does</span></span><br><span class="line"><span class="comment">     * not implement the interface &#123;<span class="doctag">@code</span> Cloneable&#125;, then a</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@code</span> CloneNotSupportedException&#125; is thrown. Note that all arrays</span></span><br><span class="line"><span class="comment">     * are considered to implement the interface &#123;<span class="doctag">@code</span> Cloneable&#125; and that</span></span><br><span class="line"><span class="comment">     * the return type of the &#123;<span class="doctag">@code</span> clone&#125; method of an array type &#123;<span class="doctag">@code</span> T[]&#125;</span></span><br><span class="line"><span class="comment">     * is &#123;<span class="doctag">@code</span> T[]&#125; where T is any reference or primitive type.</span></span><br><span class="line"><span class="comment">     * Otherwise, this method creates a new instance of the class of this</span></span><br><span class="line"><span class="comment">     * object and initializes all its fields with exactly the contents of</span></span><br><span class="line"><span class="comment">     * the corresponding fields of this object, as if by assignment; the</span></span><br><span class="line"><span class="comment">     * contents of the fields are not themselves cloned. Thus, this method</span></span><br><span class="line"><span class="comment">     * performs a "shallow copy" of this object, not a "deep copy" operation.</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * The class &#123;<span class="doctag">@code</span> Object&#125; does not itself implement the interface</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@code</span> Cloneable&#125;, so calling the &#123;<span class="doctag">@code</span> clone&#125; method on an object</span></span><br><span class="line"><span class="comment">     * whose class is &#123;<span class="doctag">@code</span> Object&#125; will result in throwing an</span></span><br><span class="line"><span class="comment">     * exception at run time.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a clone of this instance.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> CloneNotSupportedException if the object's class does not</span></span><br><span class="line"><span class="comment">     *                                    support the &#123;<span class="doctag">@code</span> Cloneable&#125; interface. Subclasses</span></span><br><span class="line"><span class="comment">     *                                    that override the &#123;<span class="doctag">@code</span> clone&#125; method can also</span></span><br><span class="line"><span class="comment">     *                                    throw this exception to indicate that an instance cannot</span></span><br><span class="line"><span class="comment">     *                                    be cloned.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> Cloneable</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Object <span class="title">clone</span><span class="params">()</span> <span class="keyword">throws</span> CloneNotSupportedException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.clone();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>


<h2 id="含有依赖注入的类的clone-方法"><a href="#含有依赖注入的类的clone-方法" class="headerlink" title="含有依赖注入的类的clone 方法"></a>含有依赖注入的类的clone 方法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">protected</span> Object <span class="title">clone</span><span class="params">()</span> <span class="keyword">throws</span> CloneNotSupportedException </span>&#123;</span><br><span class="line">       <span class="comment">// 修改clone 方法，实现深复制</span></span><br><span class="line">       <span class="comment">// return super.clone();</span></span><br><span class="line">       Product clone = (Product) <span class="keyword">super</span>.clone();</span><br><span class="line">       System.out.println(clone.toString());</span><br><span class="line">       Inner inner = ((Inner) clone.getInner().clone());</span><br><span class="line">       clone.setInner(inner);</span><br><span class="line">       <span class="keyword">return</span> clone; </span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="序列化实现拷贝"><a href="#序列化实现拷贝" class="headerlink" title="序列化实现拷贝"></a>序列化实现拷贝</h2><p>ArrayList .clone();</p>
<p>类及其子类实现 <code>Serializable</code> 接口</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//序列化</span></span><br><span class="line">      ByteArrayOutputStream byteArrayOutputStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">      <span class="keyword">try</span>(ObjectOutputStream outputStream = <span class="keyword">new</span> ObjectOutputStream(byteArrayOutputStream)) &#123;</span><br><span class="line">          outputStream.writeObject(<span class="keyword">this</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      ByteArrayInputStream byteArrayInputStream = <span class="keyword">new</span> ByteArrayInputStream(byteArrayOutputStream.toByteArray());</span><br><span class="line">      <span class="keyword">try</span>(ObjectInputStream inputStream = <span class="keyword">new</span> ObjectInputStream(byteArrayInputStream))&#123;</span><br><span class="line">          Product product = ((Product) inputStream.readObject());</span><br><span class="line">          <span class="keyword">return</span> product;</span><br><span class="line">      &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">      &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure></div>


<h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>代码不应该依赖于需要复制的对象的具体类事，使用Protoype模式</p>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><p>1、可以不耦合具体类的情况下克隆对象<br>2、避免重的初始化代码<br>3、方便构建复杂对象</p>
<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p>org.springframwork.beans.factory.support.AvstrackBeanDefinition<br>java.util.Arrays<br>ArrayList</p>
]]></content>
      <categories>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-abbrlink-undefined</title>
    <url>/kawyang/b3b09752.html</url>
    <content><![CDATA[<blockquote>
<p>本文解决的问题： 安装 <code>hexo-abbrlink</code> 后，并配置 <code>abbrlink</code> 连接，出现 <code>undefined</code>问题，所有文章标题都指向同一篇文章，并且无法重新启动 hexo 服务。</p>
</blockquote>
<a id="more"></a>

<h2 id="错误信息Error"><a href="#错误信息Error" class="headerlink" title="错误信息Error"></a>错误信息Error</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">&gt; hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">FATAL Something's wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class="line">TypeError: Cannot read property 'enable' of undefined</span><br><span class="line">    at Hexo.logic (/Users/mac/blog/node_modules/hexo-abbrlink/lib/logic.js:59:44)</span><br><span class="line">    at Hexo.tryCatcher (/Users/mac/blog/node_modules/bluebird/js/release/util.js:16:23)</span><br><span class="line">    at Hexo.<span class="tag">&lt;<span class="name">anonymous</span>&gt;</span> (/Users/mac/blog/node_modules/bluebird/js/release/method.js:15:34)</span><br><span class="line">    at /Users/mac/blog/node_modules/hexo/lib/extend/filter.js:62:52</span><br><span class="line">    at tryCatcher (/Users/mac/blog/node_modules/bluebird/js/release/util.js:16:23)</span><br><span class="line">    at Object.gotValue (/Users/mac/blog/node_modules/bluebird/js/release/reduce.js:166:18)</span><br><span class="line">    at Object.gotAccum (/Users/mac/blog/node_modules/bluebird/js/release/reduce.js:155:25)</span><br><span class="line">    at Object.tryCatcher (/Users/mac/blog/node_modules/bluebird/js/release/util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (/Users/mac/blog/node_modules/bluebird/js/release/promise.js:547:31)</span><br><span class="line">    at Promise._settlePromise (/Users/mac/blog/node_modules/bluebird/js/release/promise.js:604:18)</span><br><span class="line">    at Promise._settlePromise0 (/Users/mac/blog/node_modules/bluebird/js/release/promise.js:649:10)</span><br><span class="line">    at Promise._settlePromises (/Users/mac/blog/node_modules/bluebird/js/release/promise.js:729:18)</span><br><span class="line">    at _drainQueueStep (/Users/mac/blog/node_modules/bluebird/js/release/async.js:93:12)</span><br><span class="line">    at _drainQueue (/Users/mac/blog/node_modules/bluebird/js/release/async.js:86:9)</span><br><span class="line">    at Async._drainQueues (/Users/mac/blog/node_modules/bluebird/js/release/async.js:102:5)</span><br><span class="line">    at Immediate.Async.drainQueues [as _onImmediate] (/Users/mac/blog/node_modules/bluebird/js/release/async.js:15:14)</span><br><span class="line">    at processImmediate (internal/timers.js:456:21)</span><br></pre></td></tr></table></figure></div>

<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>根据错误提示，找到<code>/Users/mac/blog/node_modules/hexo-abbrlink/lib/logic.js:59:44</code> 59 行，如图<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vS2F3WWFuZy9pbWFnZS9yYXcvbWFzdGVyL2ltZy8yMDIwMDcwNzAwMDYxNy5wbmc?x-oss-process=image/format,png" alt=""><br>发现提示 <code>abbrlink.auto_category.enable</code> 未定义，因此在根目录配置文件内添加该属性即可解决。<br>最终 <code>abbrlink</code> 配置如下：</p>
<blockquote>
<p>修改 abbrlink 配置：</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">#permalink: :year/:month/:day/:title/</span><br><span class="line">permalink: kawyang/:abbrlink.html</span><br><span class="line">abbrlink: </span><br><span class="line">  auto_category: </span><br><span class="line">    enable: false</span><br><span class="line">  alg: crc32</span><br><span class="line">  rep: hex</span><br></pre></td></tr></table></figure></div>

<h2 id="enable-差别"><a href="#enable-差别" class="headerlink" title="enable 差别"></a>enable 差别</h2><ul>
<li><p>true : 含有提示, 如图所示<br><img src="https://gitee.com/KawYang/image/raw/master/img/20200707001755.png" alt=""></p>
</li>
<li><p>false : 没有提示，如图所示</p>
</li>
</ul>
<p><img src="https://gitee.com/KawYang/image/raw/master/img/20200707001913.png" alt=""></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>Error</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringMVC</title>
    <url>/kawyang/ae0f95e0.html</url>
    <content><![CDATA[<blockquote>
<p><code>Spring MVC</code> <code>如何使用？</code> <code>Spring MVC REST</code> <code>Spring MVC 文件上传下载</code> <code>Spring MVC 表单标签库</code> <code>Spring MVC 数据校验</code></p>
</blockquote>
<a id="more"></a>

<h3 id="Spring-MVC"><a href="#Spring-MVC" class="headerlink" title="Spring MVC"></a>Spring MVC</h3><p>Spring MVC 是目前主流的实现 MVC 设计模式的企业级开发框架，Spring 框架的一个子模块，无需整合，开发起来更加便捷。</p>
<h4 id="什么是-MVC-设计模式？"><a href="#什么是-MVC-设计模式？" class="headerlink" title="什么是 MVC 设计模式？"></a>什么是 MVC 设计模式？</h4><p>将应用程序分为 Controller、Model、View 三层，Controller 接收客户端请求，调用 Model 生成业务数据，传递给 View。</p>
<p>Spring MVC 就是对这套流程的封装，屏蔽了很多底层代码，开放出接口，让开发者可以更加轻松、便捷地完成基于 MVC 模式的 Web 开发。</p>
<h4 id="Spring-MVC-的核心组件"><a href="#Spring-MVC-的核心组件" class="headerlink" title="Spring MVC 的核心组件"></a>Spring MVC 的核心组件</h4><ul>
<li>DispatcherServlet：前置控制器，是整个流程控制的核心，控制其他组件的执行，进行统一调度，降低组件之间的耦合性，相当于总指挥。</li>
<li>Handler：处理器，完成具体的业务逻辑，相当于 Servlet 或 Action。</li>
<li>HandlerMapping：DispatcherServlet 接收到请求之后，通过 HandlerMapping 将不同的请求映射到不同的 Handler。</li>
<li>HandlerInterceptor：处理器拦截器，是一个接口，如果需要完成一些拦截处理，可以实现该接口。</li>
<li>HandlerExecutionChain：处理器执行链，包括两部分内容：Handler 和 HandlerInterceptor（系统会有一个默认的 HandlerInterceptor，如果需要额外设置拦截，可以添加拦截器）。</li>
<li>HandlerAdapter：处理器适配器，Handler 执行业务方法之前，需要进行一系列的操作，包括表单数据的验证、数据类型的转换、将表单数据封装到 JavaBean 等，这些操作都是由 HandlerApater 来完成，开发者只需将注意力集中业务逻辑的处理上，DispatcherServlet 通过 HandlerAdapter 执行不同的 Handler。</li>
<li>ModelAndView：装载了模型数据和视图信息，作为 Handler 的处理结果，返回给 DispatcherServlet。</li>
<li>ViewResolver：视图解析器，DispatcheServlet 通过它将逻辑视图解析为物理视图，最终将渲染结果响应给客户端。</li>
</ul>
<h4 id="Spring-MVC-的工作流程"><a href="#Spring-MVC-的工作流程" class="headerlink" title="Spring MVC 的工作流程"></a>Spring MVC 的工作流程</h4><ul>
<li>客户端请求被 DisptacherServlet 接收。</li>
<li>根据 HandlerMapping 映射到 Handler。</li>
<li>生成 Handler 和 HandlerInterceptor。</li>
<li>Handler 和 HandlerInterceptor 以 HandlerExecutionChain 的形式一并返回给 DisptacherServlet。</li>
<li>DispatcherServlet 通过 HandlerAdapter 调用 Handler 的方法完成业务逻辑处理。</li>
<li>Handler 返回一个 ModelAndView 给 DispatcherServlet。</li>
<li>DispatcherServlet 将获取的 ModelAndView 对象传给 ViewResolver 视图解析器，将逻辑视图解析为物理视图 View。</li>
<li>ViewResovler 返回一个 View 给 DispatcherServlet。</li>
<li>DispatcherServlet 根据 View 进行视图渲染（将模型数据 Model 填充到视图 View 中）。</li>
<li>DispatcherServlet 将渲染后的结果响应给客户端。</li>
</ul>
<p>![image-20190313111136254](/Users/southwind/Library/Application Support/typora-user-images/image-20190313111136254.png)</p>
<p>Spring MVC 流程非常复杂，实际开发中很简单，因为大部分的组件不需要开发者创建、管理，只需要通过配置文件的方式完成配置即可，真正需要开发者进行处理的只有 Handler 、View。</p>
<h4 id="如何使用？"><a href="#如何使用？" class="headerlink" title="如何使用？"></a>如何使用？</h4><ul>
<li>创建 Maven 工程，pom.xml</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.11.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>在 web.xml 中配置 DispatcherServlet。</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">"http://java.sun.com/dtd/web-app_2_3.dtd"</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>springmvc.xml</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.southwind"</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>创建 Handler</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/index"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"执行了index..."</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h3 id="Spring-MVC-注解"><a href="#Spring-MVC-注解" class="headerlink" title="Spring MVC 注解"></a>Spring MVC 注解</h3><ul>
<li>@RequestMapping </li>
</ul>
<p>Spring MVC 通过 @RequestMapping 注解将 URL 请求与业务方法进行映射，在 Handler 的类定义处以及方法定义处都可以添加 @RequestMapping ，在类定义处添加，相当于客户端多了一层访问路径。</p>
<ul>
<li>@Controller</li>
</ul>
<p>@Controller 在类定义处添加，将该类交个 IoC 容器来管理（结合 springmvc.xml 的自动扫描配置使用），同时使其成为一个控制器，可以接收客户端请求。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/index"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"执行了index..."</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>@RequestMapping 相关参数</li>
</ul>
<p>1、value：指定 URL 请求的实际地址，是 @RequestMapping 的默认值。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/index"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"执行了index..."</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>等于</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value=<span class="string">"/index"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"执行了index..."</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>2、method：指定请求的 method 类型，GET、POST、PUT、DELET。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/index"</span>,method = RequestMethod.GET)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"执行了index..."</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>上述代码表示 index 方法只能接收 GET 请求。</p>
<p>3、params：指定请求中必须包含某些参数，否则无法调用该方法。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/index"</span>,method = RequestMethod.GET,params = &#123;<span class="string">"name"</span>,<span class="string">"id=10"</span>&#125;)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"执行了index..."</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>上述代码表示请求中必须包含 name 和 id 两个参数，同时 id 的值必须是 10。</p>
<p>关于参数绑定，在形参列表中通过添加 @RequestParam 注解完成 HTTP 请求参数与业务方法形参的映射。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/index"</span>,method = RequestMethod.GET,params = &#123;<span class="string">"name"</span>,<span class="string">"id=10"</span>&#125;)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(@RequestParam(<span class="string">"name"</span>)</span> String str,@<span class="title">RequestParam</span><span class="params">(<span class="string">"id"</span>)</span> <span class="keyword">int</span> age)</span>&#123;</span><br><span class="line">    System.out.println(str);</span><br><span class="line">    System.out.println(age);</span><br><span class="line">    System.out.println(<span class="string">"执行了index..."</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>上述代码表示将请求的参数 name 和 id 分别赋给了形参 str 和 age ，同时自动完成了数据类型转换，将 “10” 转为了 int 类型的 10，再赋给 age，这些工作都是由 HandlerAdapter 来完成的。</p>
<p>Spring MVC 也支持 RESTful 风格的 URL。</p>
<p>传统类型：<a href="http://localhost:8080/hello/index?name=zhangsan&amp;id=10" target="_blank" rel="noopener">http://localhost:8080/hello/index?name=zhangsan&amp;id=10</a></p>
<p>REST：<a href="http://localhost:8080/hello/index/zhangsan/10" target="_blank" rel="noopener">http://localhost:8080/hello/index/zhangsan/10</a></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/rest/&#123;name&#125;/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">rest</span><span class="params">(@PathVariable(<span class="string">"name"</span>)</span> String name,@<span class="title">PathVariable</span><span class="params">(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id)</span>&#123;</span><br><span class="line">    System.out.println(name);</span><br><span class="line">    System.out.println(id);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>通过 @PathVariable 注解完成请求参数与形参的映射。</p>
<ul>
<li>映射 Cookie</li>
</ul>
<p>Spring MVC 通过映射可以直接在业务方法中获取 Cookie 的值。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/cookie"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">cookie</span><span class="params">(@CookieValue(value = <span class="string">"JSESSIONID"</span>)</span> String sessionId)</span>&#123;</span><br><span class="line">    System.out.println(sessionId);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>使用 JavaBean 绑定参数</li>
</ul>
<p>Spring MVC 会根据请求参数名和 JavaBean 属性名进行自动匹配，自动为对象填充属性值，同时支持及联属性。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Address</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Address address;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">13</span></span><br><span class="line">  Time: <span class="number">15</span>:<span class="number">33</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">"/hello/save"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        用户id：&lt;input type=<span class="string">"text"</span> name=<span class="string">"id"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户名：&lt;input type=<span class="string">"text"</span> name=<span class="string">"name"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户地址：&lt;input type=<span class="string">"text"</span> name=<span class="string">"address.value"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> value=<span class="string">"注册"</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/save"</span>,method = RequestMethod.POST)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">save</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>如果出现中文乱码问题，只需在 web.xml 添加 Spring MVC 自带的过滤器即可。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>JSP 页面的转发和重定向：</li>
</ul>
<p>Spring MVC 默认是以转发的形式响应 JSP。</p>
<p>1、转发</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/forward"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">forward</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"forward:/index.jsp"</span>;</span><br><span class="line">    <span class="comment">//        return "index";</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>2、重定向</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/redirect"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">redirect</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"redirect:/index.jsp"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h3 id="Spring-MVC-数据绑定"><a href="#Spring-MVC-数据绑定" class="headerlink" title="Spring MVC 数据绑定"></a>Spring MVC 数据绑定</h3><p>数据绑定：在后端的业务方法中直接获取客户端 HTTP 请求中的参数，将请求参数映射到业务方法的形参中，Spring MVC 中数据绑定的工作是由 HandlerAdapter 来完成的。</p>
<ul>
<li>基本数据类型</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/baseType"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">baseType</span><span class="params">(<span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> id+<span class="string">""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>@ResponseBody 表示 Spring MVC 会直接将业务方法的返回值响应给客户端，如果不加 @ResponseBody 注解，Spring MVC 会将业务方法的放回值传递给 DispatcherServlet，再由 DisptacherServlet 调用 ViewResolver 对返回值进行解析，映射到一个 JSP 资源。</p>
<ul>
<li>包装类</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/packageType"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">packageType</span><span class="params">(@RequestParam(value = <span class="string">"num"</span>,required = <span class="keyword">false</span>,defaultValue = <span class="string">"0"</span>)</span> Integer id)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> id+<span class="string">""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>包装类可以接收 null，当 HTTP 请求没有参数时，使用包装类定义形参的数据类型，程序不会抛出异常。</p>
<p>@RequestParam</p>
<p>value = “num”：将 HTTP 请求中名为 num 的参数赋给形参 id。</p>
<p>requried：设置 num 是否为必填项，true 表示必填，false 表示非必填，可省略。</p>
<p>defaultValue = “0”：如果 HTTP 请求中没有 num 参数，默认值为0.</p>
<ul>
<li>数组</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/data"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataBindHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/array"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">array</span><span class="params">(String[] name)</span></span>&#123;</span><br><span class="line">        String str = Arrays.toString(name);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>@RestController 表示该控制器会直接将业务方法的返回值响应给客户端，不进行视图解析。</p>
<p>@Controller 表示该控制器的每一个业务方法的返回值都会交给视图解析器进行解析，如果只需要将数据响应给客户端，而不需要进行视图解析，则需要在对应的业务方法定义处添加 @ResponseBody。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/data"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataBindHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/array"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">array</span><span class="params">(String[] name)</span></span>&#123;</span><br><span class="line">        String str = Arrays.toString(name);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>等同于</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/data"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataBindHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/array"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">array</span><span class="params">(String[] name)</span></span>&#123;</span><br><span class="line">        String str = Arrays.toString(name);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>List</li>
</ul>
<p>Spring MVC 不支持 List 类型的直接转换，需要对 List 集合进行包装。</p>
<p>集合封装类</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;User&gt; users;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>JSP</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">14</span></span><br><span class="line">  Time: <span class="number">09</span>:<span class="number">12</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">"/data/list"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        用户<span class="number">1</span>编号：&lt;input type=<span class="string">"text"</span> name=<span class="string">"users[0].id"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">1</span>名称：&lt;input type=<span class="string">"text"</span> name=<span class="string">"users[0].name"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">2</span>编号：&lt;input type=<span class="string">"text"</span> name=<span class="string">"users[1].id"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">2</span>名称：&lt;input type=<span class="string">"text"</span> name=<span class="string">"users[1].name"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">3</span>编号：&lt;input type=<span class="string">"text"</span> name=<span class="string">"users[2].id"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">3</span>名称：&lt;input type=<span class="string">"text"</span> name=<span class="string">"users[2].name"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> value=<span class="string">"提交"</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>业务方法</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/list"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">list</span><span class="params">(UserList userList)</span></span>&#123;</span><br><span class="line">    StringBuffer str = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">    <span class="keyword">for</span>(User user:userList.getUsers())&#123;</span><br><span class="line">        str.append(user);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>处理 @ResponseBody 中文乱码，在 springmvc.xml 中配置消息转换器。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 消息转换器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.StringHttpMessageConverter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"supportedMediaTypes"</span> <span class="attr">value</span>=<span class="string">"text/html;charset=UTF-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure></div>



<ul>
<li>Map</li>
</ul>
<p>自定义封装类</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMap</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,User&gt; users;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>业务方法</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/map"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">map</span><span class="params">(UserMap userMap)</span></span>&#123;</span><br><span class="line">    StringBuffer str = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">    <span class="keyword">for</span>(String key:userMap.getUsers().keySet())&#123;</span><br><span class="line">        User user = userMap.getUsers().get(key);</span><br><span class="line">        str.append(user);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>JSP</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">14</span></span><br><span class="line">  Time: <span class="number">09</span>:<span class="number">12</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">"/data/map"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        用户<span class="number">1</span>编号：&lt;input type=<span class="string">"text"</span> name=<span class="string">"users['a'].id"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">1</span>名称：&lt;input type=<span class="string">"text"</span> name=<span class="string">"users['a'].name"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">2</span>编号：&lt;input type=<span class="string">"text"</span> name=<span class="string">"users['b'].id"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">2</span>名称：&lt;input type=<span class="string">"text"</span> name=<span class="string">"users['b'].name"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">3</span>编号：&lt;input type=<span class="string">"text"</span> name=<span class="string">"users['c'].id"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">3</span>名称：&lt;input type=<span class="string">"text"</span> name=<span class="string">"users['c'].name"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> value=<span class="string">"提交"</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>



<ul>
<li>JSON</li>
</ul>
<p>客户端发生 JSON 格式的数据，直接通过 Spring MVC 绑定到业务方法的形参中。</p>
<p>处理 Spring MVC 无法加载静态资源，在 web.xml 中添加配置即可。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.js<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>JSP</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">14</span></span><br><span class="line">  Time: <span class="number">10</span>:<span class="number">35</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script type="text/javascript" src="js/jquery-3.3.1.min.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        $(function()&#123;</span><br><span class="line">           <span class="keyword">var</span> user = &#123;</span><br><span class="line">               <span class="string">"id"</span>:<span class="number">1</span>,</span><br><span class="line">               <span class="string">"name"</span>:<span class="string">"张三"</span></span><br><span class="line">           &#125;;</span><br><span class="line">           $.ajax(&#123;</span><br><span class="line">               url:<span class="string">"/data/json"</span>,</span><br><span class="line">               data:JSON.stringify(user),</span><br><span class="line">               type:<span class="string">"POST"</span>,</span><br><span class="line">               contentType:<span class="string">"application/json;charset=UTF-8"</span>,</span><br><span class="line">               dataType:<span class="string">"JSON"</span>,</span><br><span class="line">               success:function(data)&#123;</span><br><span class="line">                   alter(data.id+<span class="string">"---"</span>+data.name);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>业务方法</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/json"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">json</span><span class="params">(@RequestBody User user)</span></span>&#123;</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    user.setId(<span class="number">6</span>);</span><br><span class="line">    user.setName(<span class="string">"张六"</span>);</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>Spring MVC 中的 JSON 和 JavaBean 的转换需要借助于 fastjson，pom.xml 引入相关依赖。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.32<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>springmvc.xml 添加 fastjson 配置。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 消息转换器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.StringHttpMessageConverter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"supportedMediaTypes"</span> <span class="attr">value</span>=<span class="string">"text/html;charset=UTF-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置fastjson --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure></div>



<h3 id="Spring-MVC-模型数据解析"><a href="#Spring-MVC-模型数据解析" class="headerlink" title="Spring MVC 模型数据解析"></a>Spring MVC 模型数据解析</h3><p>JSP 四大作用域对应的内置对象：pageContext、request、session、application。</p>
<p>模型数据的绑定是由 ViewResolver 来完成的，实际开发中，我们需要先添加模型数据，再交给 ViewResolver 来绑定。</p>
<p>Spring MVC 提供了以下几种方式添加模型数据：</p>
<ul>
<li>Map</li>
<li>Model</li>
<li>ModelAndView</li>
<li>@SessionAttribute</li>
<li>@ModelAttribute</li>
</ul>
<blockquote>
<p>将模式数据绑定到 request 对象。</p>
</blockquote>
<p>1、Map</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/map"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">map</span><span class="params">(Map&lt;String,User&gt; map)</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">"张三"</span>);</span><br><span class="line">    map.put(<span class="string">"user"</span>,user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"view"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>JSP</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">14</span></span><br><span class="line">  Time: <span class="number">11</span>:<span class="number">36</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ page isELIgnored=<span class="string">"false"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    $&#123;requestScope.user&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>2、Model</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/model"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">model</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">"张三"</span>);</span><br><span class="line">    model.addAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"view"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>3、ModelAndView</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/modelAndView"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">modelAndView</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">"张三"</span>);</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">    modelAndView.addObject(<span class="string">"user"</span>,user);</span><br><span class="line">    modelAndView.setViewName(<span class="string">"view"</span>);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/modelAndView2"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">modelAndView2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">"张三"</span>);</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">    modelAndView.addObject(<span class="string">"user"</span>,user);</span><br><span class="line">    View view = <span class="keyword">new</span> InternalResourceView(<span class="string">"/view.jsp"</span>);</span><br><span class="line">    modelAndView.setView(view);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/modelAndView3"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">modelAndView3</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">"张三"</span>);</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView(<span class="string">"view"</span>);</span><br><span class="line">    modelAndView.addObject(<span class="string">"user"</span>,user);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/modelAndView4"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">modelAndView4</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">"张三"</span>);</span><br><span class="line">    View view = <span class="keyword">new</span> InternalResourceView(<span class="string">"/view.jsp"</span>);</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView(view);</span><br><span class="line">    modelAndView.addObject(<span class="string">"user"</span>,user);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/modelAndView5"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">modelAndView5</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">"张三"</span>);</span><br><span class="line">    Map&lt;String,User&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">"user"</span>,user);</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView(<span class="string">"view"</span>,map);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/modelAndView6"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">modelAndView6</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">"张三"</span>);</span><br><span class="line">    Map&lt;String,User&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">"user"</span>,user);</span><br><span class="line">    View view = <span class="keyword">new</span> InternalResourceView(<span class="string">"/view.jsp"</span>);</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView(view,map);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/modelAndView7"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">modelAndView7</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">"张三"</span>);</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView(<span class="string">"view"</span>,<span class="string">"user"</span>,user);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/modelAndView8"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">modelAndView8</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">"张三"</span>);</span><br><span class="line">    View view = <span class="keyword">new</span> InternalResourceView(<span class="string">"/view.jsp"</span>);</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView(view,<span class="string">"user"</span>,user);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>4、HttpServletRequest</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/request"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">request</span><span class="params">(HttpServletRequest request)</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">"张三"</span>);</span><br><span class="line">    request.setAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"view"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>5、@ModelAttribute</p>
<ul>
<li>定义一个方法，该方法专门用来返回要填充到模型数据中的对象。</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ModelAttribute</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">"张三"</span>);</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ModelAttribute</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span><span class="params">(Map&lt;String,User&gt; map)</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">"张三"</span>);</span><br><span class="line">    map.put(<span class="string">"user"</span>,user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ModelAttribute</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">"张三"</span>);</span><br><span class="line">    model.addAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>业务方法中无需再处理模型数据，只需返回视图即可。</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/modelAttribute"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">modelAttribute</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"view"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>将模型数据绑定到 session 对象</p>
</blockquote>
<p>1、直接使用原生的 Servlet API。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/session"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">session</span><span class="params">(HttpServletRequest request)</span></span>&#123;</span><br><span class="line">    HttpSession session = request.getSession();</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">"张三"</span>);</span><br><span class="line">    session.setAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"view"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/session2"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">session2</span><span class="params">(HttpSession session)</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">"张三"</span>);</span><br><span class="line">    session.setAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"view"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>2、@SessionAttribute</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SessionAttributes</span>(value = &#123;<span class="string">"user"</span>,<span class="string">"address"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHandler</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>对于 ViewHandler 中的所有业务方法，只要向 request 中添加了 key = “user”、key = “address” 的对象时，Spring MVC 会自动将该数据添加到 session 中，保存 key 不变。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SessionAttributes</span>(types = &#123;User<span class="class">.<span class="keyword">class</span>,<span class="title">Address</span>.<span class="title">class</span>&#125;)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">ViewHandler</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>对于 ViewHandler 中的所有业务方法，只要向 request 中添加了数据类型是 User 、Address 的对象时，Spring MVC 会自动将该数据添加到 session 中，保存 key 不变。</p>
<blockquote>
<p>将模型数据绑定到 application 对象</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/application"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">application</span><span class="params">(HttpServletRequest request)</span></span>&#123;</span><br><span class="line">    ServletContext application = request.getServletContext();</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">"张三"</span>);</span><br><span class="line">    application.setAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"view"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h3 id="Spring-MVC-自定义数据转换器"><a href="#Spring-MVC-自定义数据转换器" class="headerlink" title="Spring MVC 自定义数据转换器"></a>Spring MVC 自定义数据转换器</h3><p>数据转换器是指将客户端 HTTP 请求中的参数转换为业务方法中定义的形参，自定义表示开发者可以自主设计转换的方式，HandlerApdter 已经提供了通用的转换，String 转 int，String 转 double，表单数据的封装等，但是在特殊的业务场景下，HandlerAdapter 无法进行转换，就需要开发者自定义转换器。</p>
<p>客户端输入 String 类型的数据 “2019-03-03”，自定义转换器将该数据转为 Date 类型的对象。</p>
<ul>
<li>创建 DateConverter 转换器，实现 Conveter 接口。</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.converter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.core.convert.converter.Converter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateConverter</span> <span class="keyword">implements</span> <span class="title">Converter</span>&lt;<span class="title">String</span>, <span class="title">Date</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String pattern;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DateConverter</span><span class="params">(String pattern)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pattern = pattern;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">convert</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="keyword">this</span>.pattern);</span><br><span class="line">        Date date = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            date = simpleDateFormat.parse(s);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> date;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>springmvc.xml 配置转换器。</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置自定义转换器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"conversionService"</span> <span class="attr">class</span>=<span class="string">"org.springframework.context.support.ConversionServiceFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"converters"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.southwind.converter.DateConverter"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">"java.lang.String"</span> <span class="attr">value</span>=<span class="string">"yyyy-MM-dd"</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> <span class="attr">conversion-service</span>=<span class="string">"conversionService"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 消息转换器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.StringHttpMessageConverter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"supportedMediaTypes"</span> <span class="attr">value</span>=<span class="string">"text/html;charset=UTF-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置fastjson --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>JSP</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">14</span></span><br><span class="line">  Time: <span class="number">14</span>:<span class="number">47</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">"/converter/date"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        请输入日期:&lt;input type=<span class="string">"text"</span> name=<span class="string">"date"</span>/&gt;(yyyy-MM-dd)&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> value=<span class="string">"提交"</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>Handler</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/converter"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConverterHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/date"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">date</span><span class="params">(Date date)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> date.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>String 转 Student</p>
<p>StudentConverter</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.converter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.southwind.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.convert.converter.Converter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentConverter</span> <span class="keyword">implements</span> <span class="title">Converter</span>&lt;<span class="title">String</span>, <span class="title">Student</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">convert</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        String[] args = s.split(<span class="string">"-"</span>);</span><br><span class="line">        Student student = <span class="keyword">new</span> Student();</span><br><span class="line">        student.setId(Long.parseLong(args[<span class="number">0</span>]));</span><br><span class="line">        student.setName(args[<span class="number">1</span>]);</span><br><span class="line">        student.setAge(Integer.parseInt(args[<span class="number">2</span>]));</span><br><span class="line">        <span class="keyword">return</span> student;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>springmvc.xml</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置自定义转换器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"conversionService"</span> <span class="attr">class</span>=<span class="string">"org.springframework.context.support.ConversionServiceFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"converters"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.southwind.converter.DateConverter"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">"java.lang.String"</span> <span class="attr">value</span>=<span class="string">"yyyy-MM-dd"</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.southwind.converter.StudentConverter"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> <span class="attr">conversion-service</span>=<span class="string">"conversionService"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 消息转换器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.StringHttpMessageConverter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"supportedMediaTypes"</span> <span class="attr">value</span>=<span class="string">"text/html;charset=UTF-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置fastjson --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>JSP</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">14</span></span><br><span class="line">  Time: <span class="number">15</span>:<span class="number">23</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">"/converter/student"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        请输入学生信息：&lt;input type=<span class="string">"text"</span> name=<span class="string">"student"</span>/&gt;(id-name-age)&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> value=<span class="string">"提交"</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>Handler</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/student"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">student</span><span class="params">(Student student)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> student.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h3 id="Spring-MVC-REST"><a href="#Spring-MVC-REST" class="headerlink" title="Spring MVC REST"></a>Spring MVC REST</h3><p>REST：Representational State Transfer，资源表现层状态转换，是目前比较主流的一种互联网软件架构，它结构清晰、标准规范、易于理解、便于扩展。</p>
<ul>
<li>资源（Resource）</li>
</ul>
<p>网络上的一个实体，或者说网络中存在的一个具体信息，一段文本、一张图片、一首歌曲、一段视频等等，总之就是一个具体的存在。可以用一个 URI（统一资源定位符）指向它，每个资源都有对应的一个特定的 URI，要获取该资源时，只需要访问对应的 URI 即可。</p>
<ul>
<li>表现层（Representation）</li>
</ul>
<p>资源具体<strong>呈现出来的形式</strong>，比如文本可以用 txt 格式表示，也可以用 HTML、XML、JSON等格式来表示。</p>
<ul>
<li>状态转换（State Transfer）</li>
</ul>
<p>客户端如果希望操作服务器中的某个资源，就需要通过某种方式让服务端发生状态转换，而这种转换是建立在表现层之上的，所有叫做”表现层状态转换”。</p>
<h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul>
<li>URL 更加简洁。</li>
<li>有利于不同系统之间的资源共享，只需要遵守一定的规范，不需要进行其他配置即可实现资源共享。</li>
</ul>
<h4 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h4><p>REST 具体操作就是 HTTP 协议中四个表示操作方式的动词分别对应 CRUD 基本操作。</p>
<p>GET 用来表示获取资源。</p>
<p>POST 用来表示新建资源。</p>
<p>PUT 用来表示修改资源。</p>
<p>DELETE 用来表示删除资源。</p>
<p>Handler</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.southwind.entity.Student;</span><br><span class="line"><span class="keyword">import</span> com.southwind.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.southwind.repository.StudentRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/rest"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RESTHandeler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StudentRepository studentRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findAll"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection&lt;Student&gt; <span class="title">findAll</span><span class="params">(HttpServletResponse response)</span></span>&#123;</span><br><span class="line">        response.setContentType(<span class="string">"text/json;charset=UTF-8"</span>);</span><br><span class="line">        <span class="keyword">return</span> studentRepository.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findById/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">findById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">long</span> id)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> studentRepository.findById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/save"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(@RequestBody Student student)</span></span>&#123;</span><br><span class="line">        studentRepository.saveOrUpdate(student);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PutMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(@RequestBody Student student)</span></span>&#123;</span><br><span class="line">        studentRepository.saveOrUpdate(student);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DeleteMapping</span>(<span class="string">"/deleteById/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">long</span> id)</span>&#123;</span><br><span class="line">        studentRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>StudentRepository</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.southwind.entity.Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StudentRepository</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection&lt;Student&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">findById</span><span class="params">(<span class="keyword">long</span> id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveOrUpdate</span><span class="params">(Student student)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteById</span><span class="params">(<span class="keyword">long</span> id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>StudentRepositoryImpl</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.repository.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.southwind.entity.Student;</span><br><span class="line"><span class="keyword">import</span> com.southwind.repository.StudentRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentRepositoryImpl</span> <span class="keyword">implements</span> <span class="title">StudentRepository</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Long,Student&gt; studentMap;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        studentMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        studentMap.put(<span class="number">1L</span>,<span class="keyword">new</span> Student(<span class="number">1L</span>,<span class="string">"张三"</span>,<span class="number">22</span>));</span><br><span class="line">        studentMap.put(<span class="number">2L</span>,<span class="keyword">new</span> Student(<span class="number">2L</span>,<span class="string">"李四"</span>,<span class="number">23</span>));</span><br><span class="line">        studentMap.put(<span class="number">3L</span>,<span class="keyword">new</span> Student(<span class="number">3L</span>,<span class="string">"王五"</span>,<span class="number">24</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection&lt;Student&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> studentMap.values();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">findById</span><span class="params">(<span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> studentMap.get(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveOrUpdate</span><span class="params">(Student student)</span> </span>&#123;</span><br><span class="line">        studentMap.put(student.getId(),student);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteById</span><span class="params">(<span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">        studentMap.remove(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h3 id="Spring-MVC-文件上传下载"><a href="#Spring-MVC-文件上传下载" class="headerlink" title="Spring MVC 文件上传下载"></a>Spring MVC 文件上传下载</h3><blockquote>
<p>单文件上传</p>
</blockquote>
<p>底层是使用 Apache fileupload 组件完成上传，Spring MVC 对这种方式进行了封装。</p>
<ul>
<li>pom.xml</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>JSP</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">15</span></span><br><span class="line">  Time: <span class="number">09</span>:<span class="number">09</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ page isELIgnored=<span class="string">"false"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">"/file/upload"</span> method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"file"</span> name=<span class="string">"img"</span>/&gt;</span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> value=<span class="string">"上传"</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;img src=<span class="string">"$&#123;path&#125;"</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><strong>1、input 的 type 设置为 file。</strong></p>
<p><strong>2、form 的 method 设置为 post（get 请求只能将文件名传给服务器）</strong></p>
<p><strong>3、from 的 enctype 设置为 multipart-form-data（如果不设置只能将文件名传给服务器）</strong></p>
<ul>
<li>Handler</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/file"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/upload"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">upload</span><span class="params">(MultipartFile img, HttpServletRequest request)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(img.getSize()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//获取保存上传文件的file路径</span></span><br><span class="line">            String path = request.getServletContext().getRealPath(<span class="string">"file"</span>);</span><br><span class="line">            <span class="comment">//获取上传的文件名</span></span><br><span class="line">            String name = img.getOriginalFilename();</span><br><span class="line">            File file = <span class="keyword">new</span> File(path,name);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                img.transferTo(file);</span><br><span class="line">                <span class="comment">//保存上传之后的文件路径</span></span><br><span class="line">                request.setAttribute(<span class="string">"path"</span>,<span class="string">"/file/"</span>+name);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"upload"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>springmvc.xml</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置上传组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"multipartResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>web.xml 添加如下配置，否则客户端无法访问 png</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.png<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>多文件上传</p>
</blockquote>
<p>pom.xml</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>JSP</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">15</span></span><br><span class="line">  Time: <span class="number">09</span>:<span class="number">32</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ page isELIgnored=<span class="string">"false"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">"/file/uploads"</span> method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">        file1:&lt;input type=<span class="string">"file"</span> name=<span class="string">"imgs"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        file2:&lt;input type=<span class="string">"file"</span> name=<span class="string">"imgs"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        file3:&lt;input type=<span class="string">"file"</span> name=<span class="string">"imgs"</span>&gt;&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> value=<span class="string">"上传"</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;c:forEach items=<span class="string">"$&#123;files&#125;"</span> <span class="keyword">var</span>=<span class="string">"file"</span> &gt;</span><br><span class="line">        &lt;img src=<span class="string">"$&#123;file&#125;"</span> width=<span class="string">"300px"</span>&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>Handler</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/uploads"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">uploads</span><span class="params">(MultipartFile[] imgs,HttpServletRequest request)</span></span>&#123;</span><br><span class="line">    List&lt;String&gt; files = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (MultipartFile img:imgs)&#123;</span><br><span class="line">        <span class="keyword">if</span>(img.getSize()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//获取保存上传文件的file路径</span></span><br><span class="line">            String path = request.getServletContext().getRealPath(<span class="string">"file"</span>);</span><br><span class="line">            <span class="comment">//获取上传的文件名</span></span><br><span class="line">            String name = img.getOriginalFilename();</span><br><span class="line">            File file = <span class="keyword">new</span> File(path,name);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                img.transferTo(file);</span><br><span class="line">                <span class="comment">//保存上传之后的文件路径</span></span><br><span class="line">                files.add(<span class="string">"/file/"</span>+name);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    request.setAttribute(<span class="string">"files"</span>,files);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"uploads"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<blockquote>
<p>下载</p>
</blockquote>
<ul>
<li>JSP</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">15</span></span><br><span class="line">  Time: <span class="number">10</span>:<span class="number">36</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;a href="/file/download/1"&gt;1.png&lt;/a&gt;</span><br><span class="line">    &lt;a href="/file/download/2"&gt;2.png&lt;/a&gt;</span><br><span class="line">    &lt;a href="/file/download/3"&gt;3.png&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>Handler</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/download/&#123;name&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">download</span><span class="params">(@PathVariable(<span class="string">"name"</span>)</span> String name, HttpServletRequest request, HttpServletResponse response)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(name != <span class="keyword">null</span>)&#123;</span><br><span class="line">        name += <span class="string">".png"</span>;</span><br><span class="line">        String path = request.getServletContext().getRealPath(<span class="string">"file"</span>);</span><br><span class="line">        File file = <span class="keyword">new</span> File(path,name);</span><br><span class="line">        OutputStream outputStream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(file.exists())&#123;</span><br><span class="line">            response.setContentType(<span class="string">"application/forc-download"</span>);</span><br><span class="line">            response.setHeader(<span class="string">"Content-Disposition"</span>,<span class="string">"attachment;filename="</span>+name);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                outputStream = response.getOutputStream();</span><br><span class="line">                outputStream.write(FileUtils.readFileToByteArray(file));</span><br><span class="line">                outputStream.flush();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(outputStream != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        outputStream.close();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h3 id="Spring-MVC-表单标签库"><a href="#Spring-MVC-表单标签库" class="headerlink" title="Spring MVC 表单标签库"></a>Spring MVC 表单标签库</h3><ul>
<li>Handler</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/get"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">get</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView(<span class="string">"tag"</span>);</span><br><span class="line">    Student student = <span class="keyword">new</span> Student(<span class="number">1L</span>,<span class="string">"张三"</span>,<span class="number">22</span>);</span><br><span class="line">    modelAndView.addObject(<span class="string">"student"</span>,student);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>JSP</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">15</span></span><br><span class="line">  Time: <span class="number">10</span>:<span class="number">53</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ page isELIgnored=<span class="string">"false"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"form"</span> uri=<span class="string">"http://www.springframework.org/tags/form"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;学生信息&lt;/h1&gt;</span><br><span class="line">    &lt;form:form modelAttribute=<span class="string">"student"</span>&gt;</span><br><span class="line">        学生ID：&lt;form:input path=<span class="string">"id"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        学生姓名：&lt;form:input path=<span class="string">"name"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        学生年龄：&lt;form:input path=<span class="string">"age"</span>/&gt;&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> value=<span class="string">"提交"</span>/&gt;</span><br><span class="line">    &lt;/form:form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>1、JSP 页面导入 Spring MVC 表单标签库，与导入 JSTL 标签库的语法非常相似，前缀 prefix 可以自定义，通常定义为 from。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSP"><figure class="iseeu highlight /jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">"form"</span> uri=<span class="string">"http://www.springframework.org/tags/form"</span> %&gt;</span><br></pre></td></tr></table></figure></div>

<p>2、将 form 表单与模型数据进行绑定，通过 modelAttribute 属性完成绑定，将 modelAttribute 的值设置为模型数据对应的 key 值。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line">Handeler:modelAndView.addObject(<span class="string">"student"</span>,student);</span><br><span class="line">JSP:&lt;form:form modelAttribute=<span class="string">"student"</span>&gt;</span><br></pre></td></tr></table></figure></div>

<p>3、form 表单完成绑定之后，将模型数据的值取出绑定到不同的标签中，通过设置标签的 path 属性完成，将 path 属性的值设置为模型数据对应的属性名即可。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSP"><figure class="iseeu highlight /jsp"><table><tr><td class="code"><pre><span class="line">学生ID：&lt;form:input path=<span class="string">"id"</span>/&gt;&lt;br/&gt;</span><br><span class="line">学生姓名：&lt;form:input path=<span class="string">"name"</span>/&gt;&lt;br/&gt;</span><br><span class="line">学生年龄：&lt;form:input path=<span class="string">"age"</span>/&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure></div>

<h4 id="常用的表单标签"><a href="#常用的表单标签" class="headerlink" title="常用的表单标签"></a>常用的表单标签</h4><ul>
<li>from</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSP"><figure class="iseeu highlight /jsp"><table><tr><td class="code"><pre><span class="line">&lt;form:from modelAttribute=<span class="string">"student"</span>/&gt;</span><br></pre></td></tr></table></figure></div>

<p>渲染的是 HTML 中的<code>&lt;form&gt;&lt;/from&gt;</code>，通过 modelAttribute 属性绑定具体的模型数据。</p>
<ul>
<li>input</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSP"><figure class="iseeu highlight /jsp"><table><tr><td class="code"><pre><span class="line">&lt;form:input path=<span class="string">"name"</span>/&gt;</span><br></pre></td></tr></table></figure></div>

<p>渲染的是 HTML 中的 <code>&lt;input type=&quot;text&quot;/&gt;</code>，from 标签绑定的是模型数据，input 标签绑定的是模型数据中的属性值，通过 path 属性可以与模型数据中的属性名对应，并且支持及联操作。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSP"><figure class="iseeu highlight /jsp"><table><tr><td class="code"><pre><span class="line">&lt;from:input path=<span class="string">"address.name"</span>/&gt;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>password</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSP"><figure class="iseeu highlight /jsp"><table><tr><td class="code"><pre><span class="line">&lt;form:password path=<span class="string">"password"</span>/&gt;</span><br></pre></td></tr></table></figure></div>

<p>渲染的是 HTML 中的 <code>&lt;input type=&quot;password&quot;/&gt;</code>，通过 path 属性与模型数据的属性值进行绑定，password 标签的值不会在页面显示。</p>
<ul>
<li>checkbox</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSP"><figure class="iseeu highlight /jsp"><table><tr><td class="code"><pre><span class="line">&lt;form:checkbox path=<span class="string">"hobby"</span> value=<span class="string">"读书"</span>/&gt;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line">student.setFlag(<span class="keyword">false</span>);</span><br></pre></td></tr></table></figure></div>

<figure class="highlight"><table><tr><td class="code"><pre><span class="line">checkbox：&lt;form:checkbox path="flag" value="flag"&gt;&lt;/form:checkbox&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure>

<p>渲染的是 HTML 中的 <code>&lt;input type=&quot;checkbox&quot;/&gt;</code>，通过 path 与模型数据的属性值进行绑定，可以绑定 boolean、数组和集合。</p>
<p>如果绑定 boolean 值，若该变量的值为 true，则表示该复选框选中，否则表示不选中。</p>
<p>如果绑定数组或者集合，数组/集合中的元素等于 checkbox 的 value 值，则选中。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line">student.setHobby(Arrays.asList(<span class="string">"读书"</span>,<span class="string">"看电影"</span>,<span class="string">"玩游戏"</span>));</span><br><span class="line">modelAndView.addObject(<span class="string">"student"</span>,student);</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSP"><figure class="iseeu highlight /jsp"><table><tr><td class="code"><pre><span class="line">爱好：&lt;form:checkbox path="hobby" value="摄影"&gt;&lt;/form:checkbox&gt;摄影&lt;br/&gt;</span><br><span class="line">&lt;form:checkbox path="hobby" value="读书"&gt;&lt;/form:checkbox&gt;读书&lt;br/&gt;</span><br><span class="line">&lt;form:checkbox path="hobby" value="听音乐"&gt;&lt;/form:checkbox&gt;听音乐&lt;br/&gt;</span><br><span class="line">&lt;form:checkbox path="hobby" value="看电影"&gt;&lt;/form:checkbox&gt;看电影&lt;br/&gt;</span><br><span class="line">&lt;form:checkbox path="hobby" value="旅游"&gt;&lt;/form:checkbox&gt;旅游&lt;br/&gt;</span><br><span class="line">&lt;form:checkbox path="hobby" value="玩游戏"&gt;&lt;/form:checkbox&gt;玩游戏&lt;br/&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span> value=<span class="string">"提交"</span>/&gt;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>checkboxes</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSP"><figure class="iseeu highlight /jsp"><table><tr><td class="code"><pre><span class="line">&lt;form:checkboxes items=$&#123;student.hobby&#125; path=<span class="string">"selecHobby"</span>/&gt;</span><br></pre></td></tr></table></figure></div>

<p>渲染的是 HTML 中的一组 <code>&lt;input type=&quot;checkbox&quot;/&gt;</code>，是对 <code>&lt;form:checkbox/&gt;</code> 的一种简化，需要结合 items 和 path 属性来使用，items 绑定被遍历的集合或数组，path 绑定被选中的集合或数组，可以这样理解，items 为全部可选集合，path 为默认的选中集合。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">	List&lt;String&gt; Hobby;</span><br><span class="line">    List&lt;String&gt; selectHobby;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">student.setHobby(Arrays.asList(<span class="string">"摄影"</span>,<span class="string">"读书"</span>,<span class="string">"听音乐"</span>,<span class="string">"看电影"</span>,<span class="string">"旅游"</span>,<span class="string">"玩游戏"</span>));</span><br><span class="line">student.setSelectHobby(Arrays.asList(<span class="string">"摄影"</span>,<span class="string">"读书"</span>,<span class="string">"听音乐"</span>));</span><br><span class="line">modelAndView.addObject(<span class="string">"student"</span>,student);</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSP"><figure class="iseeu highlight /jsp"><table><tr><td class="code"><pre><span class="line">爱好：&lt;form:checkboxes path=<span class="string">"selectHobby"</span> items=<span class="string">"$&#123;student.hobby&#125;"</span>/&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure></div>

<p>需要注意的是 <strong>path 可以直接绑定模型数据的属性值</strong>，</p>
<p><strong>items 则需要通过 EL 表达式</strong>的形式从域对象中获取数据，不能直接写属性名。</p>
<ul>
<li>rabiobutton  单选框</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSP"><figure class="iseeu highlight /jsp"><table><tr><td class="code"><pre><span class="line">&lt;from:radiobutton path=<span class="string">"radioId"</span> value=<span class="string">"0"</span>/&gt;</span><br></pre></td></tr></table></figure></div>

<p>渲染的是 HTML 中的一个 <code>&lt;input type=&quot;radio&quot;/&gt;</code>，绑定的数据与标签的 value 值相等则为选中，否则不选中。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line">student.setRadioId(<span class="number">1</span>);</span><br><span class="line">modelAndView.addObject(<span class="string">"student"</span>,student);</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSP"><figure class="iseeu highlight /jsp"><table><tr><td class="code"><pre><span class="line">radiobutton:&lt;form:radiobutton path=<span class="string">"radioId"</span> value=<span class="string">"1"</span>/&gt;radiobutton&lt;br/&gt;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>radiobuttons</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSP"><figure class="iseeu highlight /jsp"><table><tr><td class="code"><pre><span class="line">&lt;form:radiobuttons itmes=<span class="string">"$&#123;student.grade&#125;"</span> path=<span class="string">"selectGrade"</span>/&gt;</span><br></pre></td></tr></table></figure></div>

<p>渲染的是 HTML 中的一组 <code>&lt;input type=&quot;radio&quot;/&gt;</code>，这里需要集合 items 和 path 两个属性来使用，items 绑定被遍历的集合或数组，path 绑定被选中的值，items 为全部的可选类型，path 为默认选中的选项，用法与 <code>&lt;form:checkboxes/&gt;</code> 一致。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line">Map&lt;Integer,String&gt; gradeMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">gradeMap.put(<span class="number">1</span>,<span class="string">"一年级"</span>);</span><br><span class="line">gradeMap.put(<span class="number">2</span>,<span class="string">"二年级"</span>);</span><br><span class="line">gradeMap.put(<span class="number">3</span>,<span class="string">"三年级"</span>);</span><br><span class="line">gradeMap.put(<span class="number">4</span>,<span class="string">"四年级"</span>);</span><br><span class="line">gradeMap.put(<span class="number">5</span>,<span class="string">"五年级"</span>);</span><br><span class="line">gradeMap.put(<span class="number">6</span>,<span class="string">"六年级"</span>);</span><br><span class="line">student.setGradeMap(gradeMap);</span><br><span class="line">student.setSelectGrade(<span class="number">3</span>);</span><br><span class="line">modelAndView.addObject(<span class="string">"student"</span>,student);</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSP"><figure class="iseeu highlight /jsp"><table><tr><td class="code"><pre><span class="line">学生年级：&lt;form:radiobuttons items=<span class="string">"$&#123;student.gradeMap&#125;"</span> path=<span class="string">"selectGrade"</span>/&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>select</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSP"><figure class="iseeu highlight /jsp"><table><tr><td class="code"><pre><span class="line">&lt;form:select items=<span class="string">"$&#123;student.citys&#125;"</span> path=<span class="string">"selectCity"</span>/&gt;</span><br></pre></td></tr></table></figure></div>

<p>渲染的是 HTML 中的一个 <code>&lt;select/&gt;</code> 标签，</p>
<p>需要结合 items 和 path 两个属性来使用，</p>
<p>items 绑定被遍历的集合或数组，</p>
<p>path 绑定被选中的值，用法与 <code>&lt;from:radiobuttons/&gt;</code>一致。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line">Map&lt;Integer,String&gt; cityMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">cityMap.put(<span class="number">1</span>,<span class="string">"北京"</span>);</span><br><span class="line">cityMap.put(<span class="number">2</span>,<span class="string">"上海"</span>);</span><br><span class="line">cityMap.put(<span class="number">3</span>,<span class="string">"广州"</span>);</span><br><span class="line">cityMap.put(<span class="number">4</span>,<span class="string">"深圳"</span>);</span><br><span class="line">student.setCityMap(cityMap);</span><br><span class="line">student.setSelectCity(<span class="number">3</span>);</span><br><span class="line">modelAndView.addObject(<span class="string">"student"</span>,student);</span><br></pre></td></tr></table></figure></div>

<figure class="highlight"><table><tr><td class="code"><pre><span class="line">所在城市：&lt;form:select items="$&#123;student.cityMap&#125;" path="selectCity"&gt;&lt;/form:select&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>options</li>
</ul>
<p><code>form:select</code> 结合 <code>form:options</code> 的使用，<code>from:select</code> 只定义 path 属性，在 <code>form:select</code> 标签内部添加一个子标签 <code>form:options</code> ，设置 items 属性，获取被遍历的集合。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">所在城市：&lt;form:select path=<span class="string">"selectCity"</span>&gt;</span><br><span class="line">  				&lt;form:options items="$&#123;student.cityMap&#125;"&gt;&lt;/form:options&gt;</span><br><span class="line">				&lt;/form:select&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>option</p>
<p><code>form:select</code> 结合 <code>form:option</code> 的使用，<code>from:select</code> 定义 path 属性，给每一个 <code>form:option</code> 设置 value 值，path 的值与哪个 value 值相等，该项默认选中。</p>
</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">所在城市：&lt;form:select path=<span class="string">"selectCity"</span>&gt;</span><br><span class="line">            &lt;form:option value="1"&gt;杭州&lt;/form:option&gt;</span><br><span class="line">            &lt;form:option value="2"&gt;成都&lt;/form:option&gt;</span><br><span class="line">            &lt;form:option value="3"&gt;西安&lt;/form:option&gt;</span><br><span class="line">        &lt;/form:select&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>textarea</li>
</ul>
<p>渲染的是 HTML 中的一个 <code>&lt;textarea/&gt;</code> ，path 绑定模型数据的属性值，作为文本输入域的默认值。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line">student.setIntroduce(<span class="string">"你好，我是..."</span>);</span><br><span class="line">modelAndView.addObject(<span class="string">"student"</span>,student);</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSP"><figure class="iseeu highlight /jsp"><table><tr><td class="code"><pre><span class="line">信息：&lt;form:textarea path=<span class="string">"introduce"</span>/&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>errors</li>
</ul>
<p>处理错误信息，一般用在数据校验，该标签需要结合 Spring MVC 的<strong>验证器</strong>结合起来使用。</p>
<h3 id="Spring-MVC-数据校验"><a href="#Spring-MVC-数据校验" class="headerlink" title="Spring MVC 数据校验"></a>Spring MVC 数据校验</h3><p>Spring MVC 提供了两种数据校验的方式：1、基于 Validator 接口。2、使用 Annotation JSR - 303 标准进行校验。</p>
<p>基于 Validator 接口的方式需要自定义 Validator 验证器，每一条数据的验证规则需要开发者手动完成，使用 Annotation JSR - 303 标准则不需要自定义验证器，通过注解的方式可以直接在实体类中添加每个属性的验证规则，这种方式更加方便，实际开发中推荐使用。</p>
<blockquote>
<p>基于 Validator 接口</p>
</blockquote>
<ul>
<li>实体类 Account</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>自定义验证器 AccountValidator，实现 Validator 接口。</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.validator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.southwind.entity.Account;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.Errors;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.ValidationUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.Validator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountValidator</span> <span class="keyword">implements</span> <span class="title">Validator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//确定是否需要验证</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">supports</span><span class="params">(Class&lt;?&gt; aClass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Account<span class="class">.<span class="keyword">class</span>.<span class="title">equals</span>(<span class="title">aClass</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//进行数据校验</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">validate</span><span class="params">(Object o, Errors errors)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//Errors存储错误信息，</span></span><br><span class="line">        ValidationUtils.rejectIfEmpty(errors,<span class="string">"name"</span>,<span class="keyword">null</span>,<span class="string">"姓名不能为空"</span>);</span><br><span class="line">        ValidationUtils.rejectIfEmpty(errors,<span class="string">"password"</span>,<span class="keyword">null</span>,<span class="string">"密码不能为空"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>控制器</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.southwind.entity.Account;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.BindingResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.annotation.Validated;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/validator"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ValidatorHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绑定前端数据</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">"account"</span>,<span class="keyword">new</span> Account());</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"login"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line">    <span class="comment">//添加注解自动绑定验证 绑定结果集</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(@Validated Account account, BindingResult bindingResult)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(bindingResult.hasErrors())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"login"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>springmvc.xml 配置验证器。</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountValidator"</span> <span class="attr">class</span>=<span class="string">"com.southwind.validator.AccountValidator"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> <span class="attr">validator</span>=<span class="string">"accountValidator"</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>JSP</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">18</span></span><br><span class="line">  Time: <span class="number">10</span>:<span class="number">31</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ page isELIgnored=<span class="string">"false"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"form"</span> uri=<span class="string">"http://www.springframework.org/tags/form"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"from"</span> uri=<span class="string">"http://www.springframework.org/tags/form"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form:form modelAttribute=<span class="string">"account"</span> action=<span class="string">"/validator/login"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        姓名：&lt;form:input path="name"/&gt;&lt;from:errors path="name"&gt;&lt;/from:errors&gt;&lt;br/&gt;</span><br><span class="line">        密码：&lt;form:input path="password"/&gt;&lt;from:errors path="password"&gt;&lt;/from:errors&gt;&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> value=<span class="string">"登录"</span>/&gt;</span><br><span class="line">    &lt;/form:form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Annotation JSR - 303 标准</p>
</blockquote>
<p>使用 Annotation JSR - 303 标准进行验证，需要导入支持这种标准的依赖 jar 文件，这里我们使用 Hibernate Validator。</p>
<ul>
<li>pom.xml</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- JSR-303 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.6.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.validation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>validation-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.1.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jboss.logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jboss-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.2.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>通过注解的方式直接在实体类中添加相关的验证规则。</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.validator.constraints.Email;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.validator.constraints.NotEmpty;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.Pattern;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.Size;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="meta">@NotEmpty</span>(message = <span class="string">"用户名不能为空"</span>)</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="meta">@Size</span>(min = <span class="number">6</span>,max = <span class="number">12</span>,message = <span class="string">"密码6-12位"</span>)</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="meta">@Email</span>(regexp = <span class="string">"^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\\\.[a-zA-Z0-9-]+)*\\\\.[a-zA-Z0-9]&#123;2,6&#125;$"</span>,message = <span class="string">"请输入正确的邮箱格mr式"</span>)</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="meta">@Pattern</span>(regexp = <span class="string">"^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0,5-9]))\\\\\\\\d&#123;8&#125;$"</span>,message = <span class="string">"请输入正确的电话"</span>)</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>ValidatorHandler</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/register"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">register</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">    model.addAttribute(<span class="string">"person"</span>,<span class="keyword">new</span> Person());</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"register"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/register"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">register</span><span class="params">(@Valid Person person, BindingResult bindingResult)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(bindingResult.hasErrors())&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"register"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>springmvc.xml</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>JSP</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">18</span></span><br><span class="line">  Time: <span class="number">11</span>:<span class="number">29</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ page isELIgnored=<span class="string">"false"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"form"</span> uri=<span class="string">"http://www.springframework.org/tags/form"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form:form modelAttribute=<span class="string">"person"</span> action=<span class="string">"/validator/register2"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        用户名：&lt;form:input path="username"&gt;&lt;/form:input&gt;&lt;form:errors path="username"/&gt;&lt;br/&gt;</span><br><span class="line">        密码：&lt;form:password path="password"&gt;&lt;/form:password&gt;&lt;form:errors path="password"/&gt;&lt;br/&gt;</span><br><span class="line">        邮箱：&lt;form:input path="email"&gt;&lt;/form:input&gt;&lt;form:errors path="email"/&gt;&lt;br/&gt;</span><br><span class="line">        电话：&lt;form:input path="phone"&gt;&lt;/form:input&gt;&lt;form:errors path="phone"/&gt;&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> value=<span class="string">"提交"</span>/&gt;</span><br><span class="line">    &lt;/form:form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>校验规则详解：</p>
<p>@Null                    被注解的元素必须为null</p>
<p>@NotNull                  被注解的元素不能为null</p>
<p>@Min(value)                 被注解的元素必须是一个数字，其值必须大于等于指定的最小值</p>
<p>@Max(value)                被注解的元素必须是一个数字，其值必须小于于等于指定的最大值    </p>
<p>@Email                     被注解的元素必须是电子邮箱地址</p>
<p>@Pattern                  被注解的元素必须符合对应的正则表达式</p>
<p>@Length                   被注解的元素的大小必须在指定的范围内</p>
<p>@NotEmpty                  被注解的字符串的值必须非空</p>
<p>Null 和 Empty 是不同的结果，String str = null，str 是 null，String str = “”，str 不是 null，其值为空。</p>
]]></content>
      <categories>
        <category>文章类型</category>
      </categories>
      <tags>
        <tag>Spring MVC</tag>
      </tags>
  </entry>
  <entry>
    <title>单例设计模式</title>
    <url>/kawyang/cd333c07.html</url>
    <content><![CDATA[<blockquote>
<p>本文总结了单例设计模式的基本内容，并📝Enum、序列化等内容。</p>
</blockquote>
<a id="more"></a>

<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>保证一个类只有一个实例，并且提供一个全局访问点</p>
<h3 id="懒汉式"><a href="#懒汉式" class="headerlink" title="懒汉式"></a>懒汉式</h3><p>1）线程安全<br>2）加锁优化=&gt; double check<br>3）编译器（JIT），CPU 有可能对指令进行重排序，导致使用到尚未初始化的实例。</p>
<ul>
<li>对象创建的步骤: 分配空间 =&gt; 初始化 =&gt; 引用赋值 在编译时 第2、3步是可以互换的</li>
<li>当步骤互换，先进行引用赋值，当另一个需要获取时，由于还未进行初始化，所以会产生<code>空指针异常</code>。</li>
<li>所以需要 通过添加 <code>volatile</code>关键字进行修饰，防止指令重排。</li>
</ul>
<h4 id="优化过程"><a href="#优化过程" class="headerlink" title="优化过程"></a>优化过程</h4><ul>
<li>基本</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LazySingleton</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> LazySingleton instance;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建私有构造函数，防止使用 new 创建</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">LazySingleton</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LazySingleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(instance == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">20</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            instance = <span class="keyword">new</span> LazySingleton();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>问题</li>
</ul>
<p>当两个线程几乎同时进入 if ，就会创建两个不同的对象。</p>
<ul>
<li><p>解决：添加程序🔒</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">static</span> LazySingleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(instance == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">20</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            instance = <span class="keyword">new</span> LazySingleton();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>问题 : 当创建实例对象后，不断获取会降低获取效率(不断加锁)。</p>
</li>
<li><p>解决 : 只需要在 if 内部添加程序🔒，以提高程序的效率</p>
</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LazySingleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(instance == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (LazySingleton<span class="class">.<span class="keyword">class</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (instance == <span class="keyword">null</span>)&#123;</span><br><span class="line">                    instance = <span class="keyword">new</span> LazySingleton();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div>

<h4 id="最终代码"><a href="#最终代码" class="headerlink" title="最终代码"></a>最终代码</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LazySingletion</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">static</span> LazySingletion instance;</span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="title">LazySingletion</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LazySingletion <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(instance == <span class="keyword">null</span>)&#123;</span><br><span class="line">			<span class="keyword">synchronized</span> (LazySingletion<span class="class">.<span class="keyword">class</span>)</span>&#123;</span><br><span class="line">				<span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;</span><br><span class="line">					instance = <span class="keyword">new</span> LazySingletion();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> instance;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="饿汉式"><a href="#饿汉式" class="headerlink" title="饿汉式"></a>饿汉式</h3><blockquote>
<p>JVM 保证线程安全的，程序在编译时就创建了对象，所以不存在线程安全问题。</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HangrySingleton</span></span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> HangrySingleton instance = <span class="keyword">new</span> HangrySingleton();</span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="title">HangrySingleton</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> HangrySingleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> instance;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="静态内部类"><a href="#静态内部类" class="headerlink" title="静态内部类"></a>静态内部类</h3><blockquote>
<p>懒加载的方式: 将单例对象 放置在内部类中，当调用 getInstance 方法时，需要内部类的属性，这时会创建 实例对象，是懒加载的方式。</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">InnerClassSingleton</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">InnerClass</span></span>&#123;</span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">static</span> InnerClassSingleton instance = <span class="keyword">new</span> InnerClassSingleton();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="title">InnerClassSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="comment">// 防止使用反射机制进行创建</span></span><br><span class="line">		<span class="comment">// 懒汉模式不能进行防护</span></span><br><span class="line">		<span class="keyword">if</span>(Inner.instance != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"已经创建过实例！～"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> InnerClassSingleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> InnerClass.instance;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="Enum-单例模式"><a href="#Enum-单例模式" class="headerlink" title="Enum 单例模式"></a>Enum 单例模式</h3><blockquote>
<p>反射安全、线程安全</p>
</blockquote>
<h3 id="反射攻击"><a href="#反射攻击" class="headerlink" title="反射攻击"></a>反射攻击</h3><blockquote>
<p>使用反射机制，可以调用私有构造函数，可能造成打破单例的规则。</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">InnerClassSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">// 防止使用反射机制进行创建</span></span><br><span class="line">	<span class="comment">// 懒汉模式不能进行防护</span></span><br><span class="line">	<span class="keyword">if</span>(Inner.instance != <span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"已经创建过实例！～"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="序列化的单例模式"><a href="#序列化的单例模式" class="headerlink" title="序列化的单例模式"></a>序列化的单例模式</h2><blockquote>
<p>将对象存入硬盘，读取的对象和调用方法获取的对象不一致。</p>
</blockquote>
<ul>
<li>解决:</li>
</ul>
<ol>
<li>对象中继承序列化接口 <code>Serializable</code></li>
<li>添加方法 :  <code>Object readResolve() throws ObjectStreamException;</code></li>
<li>添加版本🆔 : <code>static final long serialVersionUID = 43L;</code></li>
</ol>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InnerSingleton</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">43L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> InnerSingleton instance = <span class="keyword">new</span> InnerSingleton();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">InnerSingleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(Inner.instance != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"已经创建过实例！～"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> InnerSingleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Inner.instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">Object <span class="title">readResolve</span><span class="params">()</span> <span class="keyword">throws</span> ObjectStreamException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Inner.instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>测试</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    InnerSingleton instance = InnerSingleton.getInstance();</span><br><span class="line">    ObjectOutputStream out = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">"InnerSingleton"</span>));</span><br><span class="line">    out.writeObject(instance);</span><br><span class="line">    out.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">    ObjectInputStream in = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">"InnerSingleton"</span>));</span><br><span class="line">    InnerSingleton innerSingleton = (InnerSingleton) in.readObject();</span><br><span class="line">    in.close();</span><br><span class="line">    Assert.assertEquals(<span class="keyword">true</span>, InnerSingleton.getInstance() == innerSingleton);</span><br><span class="line">    <span class="comment">//通过</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="Enum类型序列化"><a href="#Enum类型序列化" class="headerlink" title="Enum类型序列化"></a>Enum类型序列化</h2><blockquote>
<p>Enum 类型可直接进行序列化，不需要进行以上操作。</p>
</blockquote>
<h2 id="其他示例"><a href="#其他示例" class="headerlink" title="其他示例"></a>其他示例</h2><ul>
<li>Spring &amp; JDK<ul>
<li>java.lang.Runtime =&gt; 饿汉式</li>
<li>java.util.Currency  =&gt; double check</li>
<li>org.springframework.aop.framework.ProxyFactoryBean</li>
<li>org.springframework.beans.factory.support.DefaultSingletonBeanRegistry</li>
</ul>
</li>
<li>Tomcat<ul>
<li>org.apache.catalina.webresources.TomcatURLStreamHandlerFactory</li>
</ul>
</li>
</ul>
<hr>
<h2 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h2><p><a href="https://www.bilibili.com/video/BV18a4y147dB?p=1" target="_blank" rel="noopener">程序员必备的13种设计模式你真的掌握了吗？全套教学视频让你彻底弄懂</a></p>
]]></content>
      <categories>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>单例模式</tag>
      </tags>
  </entry>
  <entry>
    <title>设计模式-工厂模式</title>
    <url>/kawyang/ccff2b22.html</url>
    <content><![CDATA[<blockquote>
<p>本文记录了工厂设计模式的基本实现方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a>工厂模式</h2><blockquote>
<p>在明确地计划不同条件下创建不同实例时，使用工厂模式</p>
</blockquote>
<h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><ol>
<li>将实体类进行抽象</li>
<li>实体类实现接口</li>
<li>创建工厂类</li>
<li>根据不同参数，返回不同对象</li>
</ol>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span> <span class="keyword">implements</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"Inside Rectangle::draw() method."</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Square</span> <span class="keyword">implements</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"Inside Square::draw() method."</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShapeFactory</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">   <span class="comment">//使用 getShape 方法获取形状类型的对象</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Shape <span class="title">getShape</span><span class="params">(String shapeType)</span></span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(shapeType == <span class="keyword">null</span>)&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(shapeType.equalsIgnoreCase(<span class="string">"RECTANGLE"</span>))&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> Rectangle();</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span>(shapeType.equalsIgnoreCase(<span class="string">"SQUARE"</span>))&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> Square();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FactoryPatternDemo</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      ShapeFactory shapeFactory = <span class="keyword">new</span> ShapeFactory();</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//获取 Rectangle 的对象，并调用它的 draw 方法</span></span><br><span class="line">      Shape shape2 = shapeFactory.getShape(<span class="string">"RECTANGLE"</span>);</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//调用 Rectangle 的 draw 方法</span></span><br><span class="line">      shape2.draw();</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//获取 Square 的对象，并调用它的 draw 方法</span></span><br><span class="line">      Shape shape3 = shapeFactory.getShape(<span class="string">"SQUARE"</span>);</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//调用 Square 的 draw 方法</span></span><br><span class="line">      shape3.draw();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="抽象工厂"><a href="#抽象工厂" class="headerlink" title="抽象工厂"></a>抽象工厂</h2><blockquote>
<p>将多个🏭进行<code>抽象</code>，使用不同的实现类，完成不同 <code>产品族</code> 🏭的创建，再使用🏭生产对象。</p>
</blockquote>
<ul>
<li>使用抽象类的方式将多个🏭进行抽象</li>
<li>使用工厂的方式实现🏭类</li>
<li>根据不同的需要使用🏭的🏭创建🏭</li>
<li>然后使用🏭生产对象</li>
</ul>
<p><img src="https://gitee.com/KawYang/image/raw/master/img/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E7%B1%BB%E5%9B%BE.png" alt="抽象🏭类图"></p>
<h2 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h2><p><a href="https://www.runoob.com/design-pattern/design-pattern-tutorial.html" target="_blank" rel="noopener">菜鸟教程</a></p>
]]></content>
      <categories>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>工厂模式</tag>
        <tag>抽象工厂</tag>
      </tags>
  </entry>
  <entry>
    <title>设计模式-建造者模式</title>
    <url>/kawyang/2a48474d.html</url>
    <content><![CDATA[<blockquote>
<p>当单个对象包含多个内部成员，并且成员创建较为复杂，甚至成员创建有一定顺序时，需要<code>Builder</code>设计模式。</p>
</blockquote>
<a id="more"></a>


<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><p>我们假设一个快餐店的商业案例，其中，一个典型的套餐可以是一个汉堡（Burger）和一杯冷饮（Cold drink）。</p>
<p>汉堡（Burger）可以是素食汉堡（Veg Burger）或鸡肉汉堡（Chicken Burger），它们是包在纸盒中。</p>
<p>冷饮（Cold drink）可以是可口可乐（coke）或百事可乐（pepsi），它们是装在瓶子中。</p>
<p>我们将创建一个表示食物条目（比如汉堡和冷饮）的 Item 接口和实现 Item 接口的实体类，以及一个表示食物包装的 Packing 接口和实现 Packing 接口的实体类，汉堡是包在纸盒中，冷饮是装在瓶子中。</p>
<p>然后我们创建一个 Meal 类，带有 Item 的 ArrayList 和一个通过结合 Item 来创建不同类型的 Meal 对象的 MealBuilder。BuilderPatternDemo，我们的演示类使用 MealBuilder 来创建一个 Meal。</p>
<p><img src="https://gitee.com/KawYang/image/raw/master/img/20200712155953.png" alt=""></p>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h2><p>Computer 构建需要 主板、显卡、操作系统。</p>
<h3 id="arrow-double-up-Computer-抽象类"><a href="#arrow-double-up-Computer-抽象类" class="headerlink" title=":arrow_double_up: Computer 抽象类"></a>:arrow_double_up: Computer 抽象类</h3><p>包括 <code>mBoard</code>、<code>mDisplay</code>、<code>mOS</code> 三个成员变量。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 设计模式.创造者模式.computer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Computer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> String mBoard;</span><br><span class="line">    <span class="keyword">protected</span> String mDisplay;</span><br><span class="line">    <span class="keyword">protected</span> String mOs;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">Computer</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setmBoard</span><span class="params">(String mBoard)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mBoard = mBoard;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setmDisplay</span><span class="params">(String mDisplay)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mDisplay = mDisplay;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">setOs</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Computer&#123;"</span> +</span><br><span class="line">                <span class="string">"mBoard='"</span> + mBoard + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", mDisplay='"</span> + mDisplay + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", mOs='"</span> + mOs + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h3 id="💻实现类"><a href="#💻实现类" class="headerlink" title="💻实现类"></a>💻实现类</h3><blockquote>
<p>实现抽象类中的方法</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 设计模式.创造者模式.computer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MacBook</span> <span class="keyword">extends</span> <span class="title">Computer</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mOs = <span class="string">"Mac OS X 12.x"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="building-construction-Builder"><a href="#building-construction-Builder" class="headerlink" title=":building_construction: Builder"></a>:building_construction: Builder</h3><blockquote>
<p>定义 <code>Computer</code> 部件创建方法</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 设计模式.创造者模式.computer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LiYang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Project</span> Name: Java设计模式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span> Name: 设计模式.创造者模式.computer</span></span><br><span class="line"><span class="comment"> * Created by MacBook Air on 2020/07/12.</span></span><br><span class="line"><span class="comment"> * Copyright © 2020 LiYang. All rights reserved.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"all"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">buildBoard</span><span class="params">(String board)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">buildDisplay</span><span class="params">(String display)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">buildOs</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> Computer <span class="title">build</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="factory-ComputerBuilder"><a href="#factory-ComputerBuilder" class="headerlink" title=":factory: ComputerBuilder"></a>:factory: ComputerBuilder</h3><blockquote>
<p>根据不同的电脑类型完成不同的创建</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 设计模式.创造者模式.computer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MacBookBuilder</span> <span class="keyword">extends</span> <span class="title">Builder</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> MacBook macBook = <span class="keyword">new</span> MacBook();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">buildBoard</span><span class="params">(String board)</span> </span>&#123;</span><br><span class="line">        macBook.setmBoard(board);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">buildDisplay</span><span class="params">(String display)</span> </span>&#123;</span><br><span class="line">        macBook.setmDisplay(display);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">buildOs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        macBook.setOs();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function">Computer <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> macBook;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h3 id="diamond-shape-with-a-dot-inside-Director"><a href="#diamond-shape-with-a-dot-inside-Director" class="headerlink" title=":diamond_shape_with_a_dot_inside: Director"></a>:diamond_shape_with_a_dot_inside: Director</h3><blockquote>
<p>控制部件创建顺序</p>
</blockquote>
<blockquote>
<p>构造参数需要 <code>Builder</code> 对象</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 设计模式.创造者模式.computer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Director</span> </span>&#123;</span><br><span class="line">    Builder builder;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">Director</span><span class="params">(Builder builder)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.builder = builder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建内部部件</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Computer <span class="title">construct</span><span class="params">(String board, String disPlay)</span></span>&#123;</span><br><span class="line">        builder.buildBoard(board);</span><br><span class="line">        builder.buildDisplay(disPlay);</span><br><span class="line">        builder.buildOs();</span><br><span class="line">        <span class="comment">// 返回 Builder 对象中电脑对象</span></span><br><span class="line">        <span class="keyword">return</span> builder.build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="white-check-mark-测试类"><a href="#white-check-mark-测试类" class="headerlink" title=":white_check_mark: 测试类"></a>:white_check_mark: 测试类</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="meta">@org</span>.junit.Test</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Builder builder = <span class="keyword">new</span> MacBookBuilder();</span><br><span class="line">        Director director = <span class="keyword">new</span> Director(builder);</span><br><span class="line">        Computer construct = director.construct(<span class="string">"主板"</span>, <span class="string">"Inter"</span>);</span><br><span class="line">        System.out.println(construct.toString());</span><br><span class="line"></span><br><span class="line">        builder = <span class="keyword">new</span> HonerComputerBuilder();</span><br><span class="line">        director = <span class="keyword">new</span> Director(builder);</span><br><span class="line">        Computer computer = director.construct(<span class="string">"主板CN"</span>, <span class="string">"Inter"</span>);</span><br><span class="line">        System.out.println(computer.toString());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><img src="https://raw.githubusercontent.com/LYgithub/image/master/img/20200717174853.png" alt=""></p>
]]></content>
      <categories>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb-Servlet</title>
    <url>/kawyang/3dd30874.html</url>
    <content><![CDATA[<blockquote>
<p>Servlet 笔记</p>
</blockquote>
<a id="more"></a>

<h2 id="B-S-浏览器-服务器"><a href="#B-S-浏览器-服务器" class="headerlink" title="B/S 浏览器/服务器"></a>B/S 浏览器/服务器</h2><h3 id="网络通信"><a href="#网络通信" class="headerlink" title="网络通信"></a>网络通信</h3><ol>
<li>IP</li>
<li>端口</li>
<li>传输协议<ol>
<li>基本协议<ol>
<li>TCP：安全协议，三次握手，速度慢</li>
<li>UDP：不安全，速度快</li>
</ol>
</li>
</ol>
</li>
</ol>
<h2 id="C-S-客户端-服务器"><a href="#C-S-客户端-服务器" class="headerlink" title="C/S 客户端/服务器"></a>C/S 客户端/服务器</h2><hr>
<h2 id="服务器-Tomcat"><a href="#服务器-Tomcat" class="headerlink" title="服务器(Tomcat)"></a>服务器(Tomcat)</h2><ul>
<li><p>安装了服务器软件的计算机</p>
</li>
<li><p>服务器软件：接收请求，处理请求，做出响应</p>
</li>
<li><p>web服务器软件</p>
<ul>
<li><p>在web服务器软件，部署项目，浏览器访问 （web容器）</p>
<p>常见的Java相关web服务器：</p>
<ol>
<li><p>webLogic ： oracle</p>
<ol start="2">
<li>webSphere ： IBM</li>
</ol>
</li>
</ol>
</li>
</ul>
<ol start="3">
<li><p>JBOSS ： JBOSS</p>
</li>
<li><p>TomCat : Apache基金组织</p>
</li>
</ol>
</li>
</ul>
<h3 id="download"><a href="#download" class="headerlink" title="download"></a>download</h3><ol>
<li><p>下载</p>
</li>
<li><p>解压</p>
<ul>
<li>安装路径无中文</li>
</ul>
</li>
<li><p>启动</p>
<blockquote>
<p> 修改端口号：<code>conf/server.xml</code></p>
</blockquote>
</li>
<li><p>关闭</p>
<blockquote>
<p><code>ctrl + c</code></p>
</blockquote>
</li>
</ol>
<h3 id="配置部署"><a href="#配置部署" class="headerlink" title="配置部署"></a>配置部署</h3><ol>
<li><p>放到 <code>webapps</code>目录下</p>
<blockquote>
<p>/hello : 虚拟目录/访问目录</p>
<p>简化部署：打包为 war包，自动解压和删除</p>
</blockquote>
</li>
<li><p>配置路径</p>
<p>Server.xml -&gt; TomCat的整体配置文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">Context</span> <span class="attr">docBase</span>=<span class="string">"D:\\"</span>  <span class="attr">path</span>=<span class="string">"\"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
</li>
<li><p>热部署</p>
<p>/conf/Catalina/localhost</p>
<p>下创建<code>xxx.xml</code> 文件</p>
</li>
</ol>
<h3 id="动态项目与静态项目"><a href="#动态项目与静态项目" class="headerlink" title="动态项目与静态项目"></a>动态项目与静态项目</h3><p>动态：</p>
<pre><code>-- 根目录
    -- WEB-INF 目录
        --classes : 字节码文件
        --lib ： jar包
        -- web.xml ： 配置</code></pre><h2 id="Servlet-：-server-applet"><a href="#Servlet-：-server-applet" class="headerlink" title="Servlet ： server applet"></a>Servlet ： server applet</h2><blockquote>
<p>一个接口</p>
<p>被浏览器访问到（TomCat识别）</p>
</blockquote>
<h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><ol>
<li><p>创建JavaEE项目</p>
</li>
<li><p>实现Servlet接口</p>
<ul>
<li>Servlet接口 service 方法，提供服务</li>
</ul>
</li>
<li><p>实现抽象方法</p>
</li>
<li><p>配置</p>
<blockquote>
<p>Web.xml</p>
</blockquote>
</li>
</ol>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>add_servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.servlet.AddServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>add_servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/page/求和/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></div>



<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p><img src="https://gitee.com/KawYang/image/raw/master/img/image-20200607181108630.png" alt="image-20200607181108630"></p>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<h2 id="Servlet-方法"><a href="#Servlet-方法" class="headerlink" title="Servlet 方法"></a>Servlet 方法</h2><blockquote>
<p>注意配置Servlet </p>
</blockquote>
<ol>
<li><p>init ： 初始化方法 在Servlet创建时执行，只会执行一次</p>
<ul>
<li><p>何时创建</p>
<ul>
<li><p>默认第一次被访问</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Demo1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.KawYang.Servlet.Demo1Test<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        1. 第一次访问时 负数 -1</span></span><br><span class="line"><span class="comment">            2. 服务器启动时 正数 0 或 1--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>-1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
</li>
</ul>
</li>
<li><p>Servlet 是单例的</p>
<ul>
<li>多个用户访问<code>存在线程安全问题</code></li>
<li>解决：尽量不在Servlet定义成员变量，即使定义了成员变量，不要对其修改值</li>
</ul>
</li>
</ul>
</li>
<li><p>Service ： 提供服务的方法，每次Servlet被访问时执行</p>
</li>
<li><p>destroy ： 销毁方法，在Servlet<code>正常关闭</code>时执行</p>
<ul>
<li>服务器被关闭时执行</li>
<li>Servlet 结束之前</li>
</ul>
</li>
<li><p>ServletConfig ： Servlet配置</p>
</li>
<li><p>getServletInfo : 获取版本，作者…</p>
</li>
</ol>
<h2 id="Servlet-生命周期"><a href="#Servlet-生命周期" class="headerlink" title="Servlet 生命周期"></a>Servlet 生命周期</h2><p>创建 -&gt; 提供服务 -&gt; 被销毁</p>
<h2 id="Servlet-3-0"><a href="#Servlet-3-0" class="headerlink" title="Servlet 3.0"></a>Servlet 3.0</h2><blockquote>
<p>支持注解配置，不需要 xml</p>
</blockquote>
<h3 id="注解配置"><a href="#注解配置" class="headerlink" title="注解配置"></a>注解配置</h3><p>配置资源路径</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(urlPatterns = <span class="string">"/Demo1"</span>) </span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/Demo1"</span>) <span class="comment">//value 可以省略 </span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1Test</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="IDEA与Tomcat"><a href="#IDEA与Tomcat" class="headerlink" title="IDEA与Tomcat"></a>IDEA与Tomcat</h2><ol>
<li><p>IDEA会为 每个web项目创建一份配置文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="code"><pre><span class="line">08-Jun-2020 15:32:33.041 信息 [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         /Users/mac/Library/Caches/IntelliJIdea2019.3/tomcat/_Demo1</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>工作空间项目 和 TomCat部署的文本项目</p>
<ol>
<li>真正访问的是 <code>部署</code> 项目，对应<strong>工作空间</strong>下 web文件的所有内容</li>
<li>WEB-INF 下文件<strong>不能</strong>被访问</li>
</ol>
</li>
<li><p>断点调试</p>
<p>Debug 运行</p>
</li>
</ol>
<h2 id="Servlet体系结构"><a href="#Servlet体系结构" class="headerlink" title="Servlet体系结构"></a>Servlet体系结构</h2><p>Servlet (接口) -&gt; GenericServlet (类)-&gt; HttpServlet (类)</p>
<h3 id="GenericServlet"><a href="#GenericServlet" class="headerlink" title="GenericServlet"></a>GenericServlet</h3><blockquote>
<p> 其他方法默认空实现，只将<strong>Service</strong>进行抽象</p>
</blockquote>
<h3 id="HttpServlet"><a href="#HttpServlet" class="headerlink" title="HttpServlet"></a>HttpServlet</h3><blockquote>
<p>对Http协议 简化操作 和 Web的封装</p>
</blockquote>
<p><img src="https://gitee.com/KawYang/image/raw/master/img/image-20200608160714672.png" alt="image-20200608160714672"></p>
<ol>
<li>继承HttpServlet</li>
<li>复写 <code>doGet、doPost</code></li>
</ol>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ol>
<li>urlPatterns : 访问路径 可以定义多个，名为value 可以省略 <ol>
<li>/xx</li>
<li>/xx/xx<ul>
<li>目录结构</li>
<li>/* 优先级最低</li>
</ul>
</li>
<li><strong><code>* .do</code></strong><ul>
<li>不能用<strong>/</strong></li>
</ul>
</li>
</ol>
</li>
</ol>
<hr>
<h1 id="Http"><a href="#Http" class="headerlink" title="Http"></a>Http</h1><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul>
<li><p>基于 TCP/IP 的高级协议</p>
</li>
<li><p>默认端口 80</p>
</li>
<li><p>基于请求响应模型的。一次请求对应一个响应</p>
</li>
<li><p>无状态协议：每次请求之间相互独立，不能交互数据</p>
</li>
</ul>
<h2 id="历史版本"><a href="#历史版本" class="headerlink" title="历史版本"></a>历史版本</h2><p>1.0 ： 每次请求都建立新的连接</p>
<p>1.1：复用连接</p>
<h2 id="请求消息数据格式"><a href="#请求消息数据格式" class="headerlink" title="请求消息数据格式"></a>请求消息数据格式</h2><ol>
<li><p>请求行 ： 请求方式  请求url 请求协议/版本</p>
<ul>
<li>GET : 在请求行中，url中 ，长度有限，不安全</li>
<li>POST ： 数据在请求体中，长度无限制，安全</li>
</ul>
</li>
<li><p>请求头 ： 名称 ： 值</p>
<ul>
<li><p>Referer ：从哪里来，</p>
<ul>
<li>防盗链</li>
<li>统计</li>
</ul>
<p><img src="https://gitee.com/KawYang/image/raw/master/img/image-20200608163915586.png" alt="image-20200608163915586"></p>
</li>
<li><p>Connection ： keep-alone 复用</p>
</li>
</ul>
</li>
<li><p>请求空行 ： 空行，分割作用</p>
</li>
<li><p>请求体 ： userName=Jary</p>
</li>
</ol>
<h3 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h3><p><img src="https://gitee.com/KawYang/image/raw/master/img/image-20200608164323934.png" alt="image-20200608164323934"></p>
<ol>
<li>服务器创建 Request 和 response</li>
<li>Request 获取请求消息，response 设置响应消息</li>
</ol>
<h3 id="Request-继承结构"><a href="#Request-继承结构" class="headerlink" title="Request 继承结构"></a>Request 继承结构</h3><p>。。。</p>
<h3 id="Request功能"><a href="#Request功能" class="headerlink" title="Request功能"></a>Request功能</h3><ol>
<li><p>请求行数据</p>
<ul>
<li>GET /test/Demo1?name=zhangsan HTTP/1.1</li>
<li>方法<ol>
<li>String getMethod() : GET</li>
<li><strong>String getContextPath() : 虚拟路径 /test</strong></li>
<li>String getServletPath() : Servlet 路径  /Demo1</li>
<li>String getQueryString() : 参数name=zhangsan </li>
<li><strong>String getRequestURI() ：/test/Demo1</strong></li>
<li>String getRequestURL()  : <a href="http://loaclhost/test/Demo1" target="_blank" rel="noopener">http://loaclhost/test/Demo1</a></li>
<li>String getProtocol() : HTTP/1.1 版本</li>
<li>String getRemoteAddr() : 客户IP</li>
</ol>
</li>
<li>URL : 统一资源定位符 <code>http://loaclhost/test/Demo1</code></li>
<li>URI ：统一资源标识符 <code>/test/Demo1</code></li>
</ul>
</li>
<li><p>请求头数据</p>
<ul>
<li>方法<ol>
<li>String getHeader(String name) ： 获取请求头信息</li>
<li>Enumeration<String> getHeaderNames() : 获取请求头名称</li>
</ol>
</li>
</ul>
</li>
<li><p>请求体数据</p>
<ul>
<li>还有POST方式，才有请求体</li>
<li>步骤：<ol>
<li>获取流对象<ul>
<li>getReader() : 获取字符输入流，智能操作字符</li>
<li>ServletInputStream getInputStream（） ： 获取字节输入流，可操作所有类型数据</li>
</ul>
</li>
<li>再从流对象中拿出数据</li>
</ol>
</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line">BufferedReader br = req.getReader();</span><br><span class="line">String line = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">while</span>((line = br.readerLine()) != <span class="keyword">null</span>)&#123;</span><br><span class="line">    System.out.println(line);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



</li>
</ol>
<h3 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h3><ol>
<li><p>获取请求参数 </p>
<ol>
<li>String  getParameter(String name) =&gt; 获取值</li>
<li>String  getParameterValues(String name)   =&gt; hobby=xx&amp;hobby=game</li>
<li>Enumeration<String> GetParameterNames() =&gt;  获取名称</li>
<li>Map&lt;String, String[]&gt; getParameterMap() =&gt; 获取所有参数的集合</li>
</ol>
<ul>
<li><p>中文乱码</p>
<ul>
<li><p>Tomcat8 解决get中文乱码</p>
</li>
<li><pre><code class="java">req.setCharacterEncoding(<span class="string">"utf-8"</span>);
&lt;!--￼<span class="number">7</span>--&gt;

**特点**

<span class="number">1</span>. 浏览器**地址栏**没有变
<span class="number">2</span>. 服务器**内部**资源
<span class="number">3</span>. 转发使用**一次请求**</code></pre>
</li>
</ul>
</li>
</ul>
</li>
<li><p>共享</p>
<ol>
<li>域对象 ： 一个有作用范围的对象<ul>
<li>request域：一次请求的范围，一般用于请求转发的多个资源中共享数据</li>
</ul>
</li>
<li>方法<ul>
<li>setAttribute(String name, Object obj) : 存储数据</li>
<li>getAttribute(String name) : 取值</li>
<li>removeAttribute(String name) : 删除</li>
</ul>
</li>
</ol>
</li>
<li><p>获取ServletContext</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line">ServletContext servletContext = request.getServletContext();</span><br><span class="line">System.out.println(servletContext);</span><br></pre></td></tr></table></figure></div>

</li>
</ol>
<h2 id="登录练习-exclamation"><a href="#登录练习-exclamation" class="headerlink" title="登录练习 :exclamation:"></a>登录练习 :exclamation:</h2><p><a href="https://www.bilibili.com/video/BV1aE411L7XV?p=256" target="_blank" rel="noopener">用户登录</a></p>
<hr>
<h2 id="响应消息数据格式"><a href="#响应消息数据格式" class="headerlink" title="响应消息数据格式"></a>响应消息数据格式</h2><h3 id="响应消息"><a href="#响应消息" class="headerlink" title="响应消息"></a>响应消息</h3><ol>
<li><p>响应行 </p>
<ul>
<li>格式 ： 协议/版本 响应状态码 状态码描述</li>
<li>状态码：三位<ul>
<li>1xx ： 服务器接收客户端消息，没有接收完成</li>
<li>2xx ： OK</li>
<li>3xx :  重定向 302 ，资源跳转；304 访问缓存</li>
<li>4xx ：客户端错误， 404 ； 405 无Post/Get方法</li>
<li>5xx ：服务器错误 </li>
</ul>
</li>
</ul>
<p><img src="https://gitee.com/KawYang/image/raw/master/img/image-20200609164456185.png" alt="image-20200609164456185"></p>
</li>
<li><p>响应头</p>
<ul>
<li>头名称 ： 值</li>
<li>Content-Type ： 响应体数据编码格式</li>
<li>Content-disposition ： 打开响应体格式<ul>
<li>默认 ： in-line 当前页面中展示</li>
<li>attachment；filename=xxx ： 附件格式打开，文件下载 </li>
</ul>
</li>
</ul>
</li>
<li><p>响应空行</p>
</li>
<li><p>响应体 </p>
<ul>
<li>传送的数据</li>
</ul>
</li>
</ol>
<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>状态码：setStatus(int c)</p>
<p>响应头 ： setHeader（String name, String value)</p>
<p>响应体 ：</p>
<ol>
<li><p>步骤</p>
<ol>
<li>获去输出流<ol>
<li>字符输出流<ul>
<li>PrintWriter getWriter()</li>
</ul>
</li>
<li>字节输出流<ul>
<li>ServletOutputStream getOutputStream()</li>
</ul>
</li>
</ol>
</li>
<li>使用输出流输出到浏览器中</li>
</ol>
</li>
</ol>
<h3 id="练习-exclamation"><a href="#练习-exclamation" class="headerlink" title="练习:exclamation:"></a>练习:exclamation:</h3><ol>
<li><p>重定向</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//自动跳转到Demo2  重定向</span></span><br><span class="line"><span class="comment">//设置状态码</span></span><br><span class="line">resp.setStatus(<span class="number">302</span>);</span><br><span class="line"><span class="comment">// 设置头</span></span><br><span class="line">resp.setHeader(<span class="string">"location"</span>, <span class="string">"/HomeWork/responseDemo2"</span>);</span><br><span class="line"></span><br><span class="line">resp.sendRedirect(<span class="string">"/HomeWork/responseDemo2"</span>);</span><br></pre></td></tr></table></figure></div>

<ul>
<li><p><strong>$ \color {red}{ forword 和   Redirect 区别}$</strong></p>
</li>
<li><p>特点</p>
<ul>
<li>地址栏发生变化</li>
<li>可访问其他服务器的资源</li>
<li>两次请求</li>
<li>不能共享数据</li>
</ul>
</li>
<li><p>路径 </p>
<ul>
<li><p>绝对路径： 确定唯一资源</p>
<p>规则： 判断定义的路径是给谁用的</p>
<p>​    客户端： <strong>添加虚拟目录</strong>（项目访问路径） =&gt; 重定向  ： 建议<strong>动态获取</strong> <code>String contextPath = req.getContextPath();</code></p>
<p>​    服务器：<strong>不需要加虚拟目录</strong> =&gt; 转发</p>
<blockquote>
<p>“/HomeWork/responseDemo2” 省略 <a href="http://loaclhost:8080" target="_blank" rel="noopener">http://loaclhost:8080</a> </p>
</blockquote>
</li>
<li><p>相对路径 ： 不可以确定唯一资源 , <strong>不</strong> 以<code>/</code> 开头，或 <code>./</code>开头 <strong>可以不写</strong></p>
<blockquote>
<p> <strong>找到当前路径和目标资源之间的相对关系</strong></p>
</blockquote>
</li>
</ul>
</li>
</ul>
</li>
<li><p>服务器输出字符数据</p>
</li>
<li><p>服务器输出字节流</p>
</li>
<li><p>验证码</p>
</li>
</ol>
<h1 id="ServletContext对象"><a href="#ServletContext对象" class="headerlink" title="ServletContext对象"></a>ServletContext对象</h1><ol>
<li>代表整个web应用，可以和程序的容器<code>tomcat</code>进行通讯</li>
<li>功能<ol>
<li>获取 MIME类型：</li>
<li>域对象 ： 共享数据 </li>
<li>获取文件的真实<code>服务器</code>路径</li>
</ol>
</li>
</ol>
<h2 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h2><p>request.getServletContext</p>
<p>httpServlet.getServletContext -&gt; this.geServletContext</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">        <span class="keyword">this</span>.getServletContext();</span><br><span class="line">        req.getServletContext();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ol>
<li><p>获取 MIME类型：</p>
<ul>
<li><p>MIME ,或联网通信过程中定义的一种文件数据类型</p>
<ul>
<li>格式 ： 大类型/小类型  text/ html  image/jpeg</li>
</ul>
</li>
<li><p><strong>String  getMimeType(String file)</strong></p>
</li>
<li><p>tomcat下的<code>web.xml</code> </p>
</li>
<li><pre><code class="java">ServletContext servletContext = req.getServletContext();
String file = <span class="string">"a.jpg"</span>;
String mimeType = servletContext.getMimeType(file);
System.out.println(mimeType);</code></pre>
</li>
</ul>
</li>
<li><p>域对象 ： 共享数据 </p>
<ul>
<li>setAttribute(String name, Object value)</li>
<li>getAttribute(String name)</li>
<li>removeAttrivute(String name)</li>
<li>范围 ：<strong>共享所有用户的请求数据</strong></li>
</ul>
</li>
<li><p>获取文件的真实<code>服务器</code>路径</p>
<ul>
<li>String getRealPath(String path)</li>
<li>配置文件  src  web WEB-INF<ul>
<li>web =&gt; /xxx</li>
<li>WEB-INF =&gt; /WEB-INF/xx</li>
<li>src<code>已经配置到服务器</code>  =&gt;  /WEB-INF/classes/xx</li>
</ul>
</li>
</ul>
</li>
</ol>
<h2 id="案例-：-文件下载"><a href="#案例-：-文件下载" class="headerlink" title="案例   ： 文件下载"></a>案例   ： 文件下载</h2><ol>
<li><p>页面显示下载链接</p>
</li>
<li><p>点击链接弹出下载提示框</p>
<ol>
<li><p>使用响应头设置资源的打开方式</p>
<p><code>Content-dispostion:attachment;filename=xxx</code></p>
</li>
</ol>
</li>
<li><p>下载</p>
</li>
</ol>
<p>步骤：</p>
<ul>
<li>定义页面，编辑超链接href属性 ，指向Servlet ，传递资源名</li>
<li>定义Servlet<ul>
<li>获取文件名</li>
<li>加载进内存</li>
<li>指定响应头</li>
<li>写出到response对象中</li>
</ul>
</li>
</ul>
<h2 id="中文乱码"><a href="#中文乱码" class="headerlink" title="中文乱码"></a>中文乱码</h2><ol>
<li>获取浏览器</li>
<li>返回不同的编码方式设置filename</li>
</ol>
]]></content>
      <categories>
        <category>JavaWeb</category>
      </categories>
      <tags>
        <tag>Servlet</tag>
        <tag>JavaWeb</tag>
      </tags>
  </entry>
  <entry>
    <title>archives</title>
    <url>/archives/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>tags</title>
    <url>/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
